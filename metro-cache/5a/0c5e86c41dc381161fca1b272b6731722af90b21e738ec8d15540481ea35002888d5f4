{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":77,"column":1,"index":3087}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":77,"column":1,"index":3087}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":77,"column":1,"index":3087}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"../../../exports/Platform","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":49,"index":274}}],"key":"Pm4EHmHI/fMp81Vm5Aej1vZ4FX0="}},{"name":"./RCTDeviceEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":275},"end":{"line":14,"column":60,"index":335}}],"key":"0flqaKRlRw3xmpqHStv6m8gpyYo="}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":336},"end":{"line":15,"column":43,"index":379}}],"key":"avnjoAx2FQYjx6eZ7ALk+OuZk68="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../../exports/Platform\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./RCTDeviceEventEmitter\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"fbjs/lib/invariant\"));\n  /**\n   * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n   * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n   * will be notified (via `addListener` and `removeListeners`) when the listener\n   * count changes to manage \"native memory\".\n   *\n   * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n   * This means event names must be globally unique, and it means that call sites\n   * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n   */\n  var NativeEventEmitter = exports.default = /*#__PURE__*/function () {\n    function NativeEventEmitter(nativeModule) {\n      (0, _classCallCheck2.default)(this, NativeEventEmitter);\n      if (_Platform.default.OS === 'ios') {\n        (0, _invariant.default)(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n        this._nativeModule = nativeModule;\n      }\n    }\n    return (0, _createClass2.default)(NativeEventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        var _this = this;\n        var _this$_nativeModule;\n        (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n        var subscription = _RCTDeviceEventEmitter.default.addListener(eventType, listener, context);\n        return {\n          remove: function () {\n            if (subscription != null) {\n              var _this$_nativeModule2;\n              (_this$_nativeModule2 = _this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1);\n              // $FlowFixMe[incompatible-use]\n              subscription.remove();\n              subscription = null;\n            }\n          }\n        };\n      }\n\n      /**\n       * @deprecated Use `remove` on the EventSubscription from `addListener`.\n       */\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var _this$_nativeModule3;\n        (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1);\n        // NOTE: This will report a deprecation notice via `console.error`.\n        // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n        _RCTDeviceEventEmitter.default.removeListener(eventType, listener);\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n        // included for completeness.\n        _RCTDeviceEventEmitter.default.emit(eventType, ...args);\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        var _this$_nativeModule4;\n        (0, _invariant.default)(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n        (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n        _RCTDeviceEventEmitter.default.removeAllListeners(eventType);\n      }\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        return _RCTDeviceEventEmitter.default.listenerCount(eventType);\n      }\n    }]);\n  }();\n});","lineCount":99,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[19,2,11,13],[19,6,11,13,"_classCallCheck2"],[19,22,11,13],[19,25,11,13,"_interopRequireDefault"],[19,47,11,13],[19,48,11,13,"_$$_REQUIRE"],[19,59,11,13],[19,60,11,13,"_dependencyMap"],[19,74,11,13],[20,2,11,13],[20,6,11,13,"_createClass2"],[20,19,11,13],[20,22,11,13,"_interopRequireDefault"],[20,44,11,13],[20,45,11,13,"_$$_REQUIRE"],[20,56,11,13],[20,57,11,13,"_dependencyMap"],[20,71,11,13],[21,2,13,0],[21,6,13,0,"_Platform"],[21,15,13,0],[21,18,13,0,"_interopRequireDefault"],[21,40,13,0],[21,41,13,0,"_$$_REQUIRE"],[21,52,13,0],[21,53,13,0,"_dependencyMap"],[21,67,13,0],[22,2,14,0],[22,6,14,0,"_RCTDeviceEventEmitter"],[22,28,14,0],[22,31,14,0,"_interopRequireDefault"],[22,53,14,0],[22,54,14,0,"_$$_REQUIRE"],[22,65,14,0],[22,66,14,0,"_dependencyMap"],[22,80,14,0],[23,2,15,0],[23,6,15,0,"_invariant"],[23,16,15,0],[23,19,15,0,"_interopRequireDefault"],[23,41,15,0],[23,42,15,0,"_$$_REQUIRE"],[23,53,15,0],[23,54,15,0,"_dependencyMap"],[23,68,15,0],[24,2,16,0],[25,0,17,0],[26,0,18,0],[27,0,19,0],[28,0,20,0],[29,0,21,0],[30,0,22,0],[31,0,23,0],[32,0,24,0],[33,0,25,0],[34,2,16,0],[34,6,26,21,"NativeEventEmitter"],[34,24,26,39],[34,27,26,39,"exports"],[34,34,26,39],[34,35,26,39,"default"],[34,42,26,39],[35,4,27,2],[35,13,27,2,"NativeEventEmitter"],[35,32,27,14,"nativeModule"],[35,44,27,26],[35,46,27,28],[36,6,27,28],[36,10,27,28,"_classCallCheck2"],[36,26,27,28],[36,27,27,28,"default"],[36,34,27,28],[36,42,27,28,"NativeEventEmitter"],[36,60,27,28],[37,6,28,4],[37,10,28,8,"Platform"],[37,27,28,16],[37,28,28,17,"OS"],[37,30,28,19],[37,35,28,24],[37,40,28,29],[37,42,28,31],[38,8,29,6],[38,12,29,6,"invariant"],[38,30,29,15],[38,32,29,16,"nativeModule"],[38,44,29,28],[38,48,29,32],[38,52,29,36],[38,54,29,38],[38,112,29,96],[38,113,29,97],[39,8,30,6],[39,12,30,10],[39,13,30,11,"_nativeModule"],[39,26,30,24],[39,29,30,27,"nativeModule"],[39,41,30,39],[40,6,31,4],[41,4,32,2],[42,4,32,3],[42,15,32,3,"_createClass2"],[42,28,32,3],[42,29,32,3,"default"],[42,36,32,3],[42,38,32,3,"NativeEventEmitter"],[42,56,32,3],[43,6,32,3,"key"],[43,9,32,3],[44,6,32,3,"value"],[44,11,32,3],[44,13,33,2],[44,22,33,2,"addListener"],[44,33,33,13,"addListener"],[44,34,33,14,"eventType"],[44,43,33,23],[44,45,33,25,"listener"],[44,53,33,33],[44,55,33,35,"context"],[44,62,33,42],[44,64,33,44],[45,8,33,44],[45,12,33,44,"_this"],[45,17,33,44],[46,8,34,4],[46,12,34,8,"_this$_nativeModule"],[46,31,34,27],[47,8,35,4],[47,9,35,5,"_this$_nativeModule"],[47,28,35,24],[47,31,35,27],[47,35,35,31],[47,36,35,32,"_nativeModule"],[47,49,35,45],[47,54,35,50],[47,58,35,54],[47,61,35,57],[47,66,35,62],[47,67,35,63],[47,70,35,66,"_this$_nativeModule"],[47,89,35,85],[47,90,35,86,"addListener"],[47,101,35,97],[47,102,35,98,"eventType"],[47,111,35,107],[47,112,35,108],[48,8,36,4],[48,12,36,8,"subscription"],[48,24,36,20],[48,27,36,23,"RCTDeviceEventEmitter"],[48,57,36,44],[48,58,36,45,"addListener"],[48,69,36,56],[48,70,36,57,"eventType"],[48,79,36,66],[48,81,36,68,"listener"],[48,89,36,76],[48,91,36,78,"context"],[48,98,36,85],[48,99,36,86],[49,8,37,4],[49,15,37,11],[50,10,38,6,"remove"],[50,16,38,12],[50,18,38,14],[50,27,38,14,"remove"],[50,28,38,14],[50,30,38,20],[51,12,39,8],[51,16,39,12,"subscription"],[51,28,39,24],[51,32,39,28],[51,36,39,32],[51,38,39,34],[52,14,40,10],[52,18,40,14,"_this$_nativeModule2"],[52,38,40,34],[53,14,41,10],[53,15,41,11,"_this$_nativeModule2"],[53,35,41,31],[53,38,41,34,"_this"],[53,43,41,38],[53,44,41,39,"_nativeModule"],[53,57,41,52],[53,62,41,57],[53,66,41,61],[53,69,41,64],[53,74,41,69],[53,75,41,70],[53,78,41,73,"_this$_nativeModule2"],[53,98,41,93],[53,99,41,94,"removeListeners"],[53,114,41,109],[53,115,41,110],[53,116,41,111],[53,117,41,112],[54,14,42,10],[55,14,43,10,"subscription"],[55,26,43,22],[55,27,43,23,"remove"],[55,33,43,29],[55,34,43,30],[55,35,43,31],[56,14,44,10,"subscription"],[56,26,44,22],[56,29,44,25],[56,33,44,29],[57,12,45,8],[58,10,46,6],[59,8,47,4],[59,9,47,5],[60,6,48,2],[62,6,50,2],[63,0,51,0],[64,0,52,0],[65,4,50,2],[66,6,50,2,"key"],[66,9,50,2],[67,6,50,2,"value"],[67,11,50,2],[67,13,53,2],[67,22,53,2,"removeListener"],[67,36,53,16,"removeListener"],[67,37,53,17,"eventType"],[67,46,53,26],[67,48,53,28,"listener"],[67,56,53,36],[67,58,53,38],[68,8,54,4],[68,12,54,8,"_this$_nativeModule3"],[68,32,54,28],[69,8,55,4],[69,9,55,5,"_this$_nativeModule3"],[69,29,55,25],[69,32,55,28],[69,36,55,32],[69,37,55,33,"_nativeModule"],[69,50,55,46],[69,55,55,51],[69,59,55,55],[69,62,55,58],[69,67,55,63],[69,68,55,64],[69,71,55,67,"_this$_nativeModule3"],[69,91,55,87],[69,92,55,88,"removeListeners"],[69,107,55,103],[69,108,55,104],[69,109,55,105],[69,110,55,106],[70,8,56,4],[71,8,57,4],[72,8,58,4,"RCTDeviceEventEmitter"],[72,38,58,25],[72,39,58,26,"removeListener"],[72,53,58,40],[72,54,58,41,"eventType"],[72,63,58,50],[72,65,58,52,"listener"],[72,73,58,60],[72,74,58,61],[73,6,59,2],[74,4,59,3],[75,6,59,3,"key"],[75,9,59,3],[76,6,59,3,"value"],[76,11,59,3],[76,13,60,2],[76,22,60,2,"emit"],[76,26,60,6,"emit"],[76,27,60,7,"eventType"],[76,36,60,16],[76,38,60,18],[77,8,61,4],[77,13,61,9],[77,17,61,13,"_len"],[77,21,61,17],[77,24,61,20,"arguments"],[77,33,61,29],[77,34,61,30,"length"],[77,40,61,36],[77,42,61,38,"args"],[77,46,61,42],[77,49,61,45],[77,53,61,49,"Array"],[77,58,61,54],[77,59,61,55,"_len"],[77,63,61,59],[77,66,61,62],[77,67,61,63],[77,70,61,66,"_len"],[77,74,61,70],[77,77,61,73],[77,78,61,74],[77,81,61,77],[77,82,61,78],[77,83,61,79],[77,85,61,81,"_key"],[77,89,61,85],[77,92,61,88],[77,93,61,89],[77,95,61,91,"_key"],[77,99,61,95],[77,102,61,98,"_len"],[77,106,61,102],[77,108,61,104,"_key"],[77,112,61,108],[77,114,61,110],[77,116,61,112],[78,10,62,6,"args"],[78,14,62,10],[78,15,62,11,"_key"],[78,19,62,15],[78,22,62,18],[78,23,62,19],[78,24,62,20],[78,27,62,23,"arguments"],[78,36,62,32],[78,37,62,33,"_key"],[78,41,62,37],[78,42,62,38],[79,8,63,4],[80,8,64,4],[81,8,65,4],[82,8,66,4,"RCTDeviceEventEmitter"],[82,38,66,25],[82,39,66,26,"emit"],[82,43,66,30],[82,44,66,31,"eventType"],[82,53,66,40],[82,55,66,42],[82,58,66,45,"args"],[82,62,66,49],[82,63,66,50],[83,6,67,2],[84,4,67,3],[85,6,67,3,"key"],[85,9,67,3],[86,6,67,3,"value"],[86,11,67,3],[86,13,68,2],[86,22,68,2,"removeAllListeners"],[86,40,68,20,"removeAllListeners"],[86,41,68,21,"eventType"],[86,50,68,30],[86,52,68,32],[87,8,69,4],[87,12,69,8,"_this$_nativeModule4"],[87,32,69,28],[88,8,70,4],[88,12,70,4,"invariant"],[88,30,70,13],[88,32,70,14,"eventType"],[88,41,70,23],[88,45,70,27],[88,49,70,31],[88,51,70,33],[88,123,70,105],[88,124,70,106],[89,8,71,4],[89,9,71,5,"_this$_nativeModule4"],[89,29,71,25],[89,32,71,28],[89,36,71,32],[89,37,71,33,"_nativeModule"],[89,50,71,46],[89,55,71,51],[89,59,71,55],[89,62,71,58],[89,67,71,63],[89,68,71,64],[89,71,71,67,"_this$_nativeModule4"],[89,91,71,87],[89,92,71,88,"removeListeners"],[89,107,71,103],[89,108,71,104],[89,112,71,108],[89,113,71,109,"listenerCount"],[89,126,71,122],[89,127,71,123,"eventType"],[89,136,71,132],[89,137,71,133],[89,138,71,134],[90,8,72,4,"RCTDeviceEventEmitter"],[90,38,72,25],[90,39,72,26,"removeAllListeners"],[90,57,72,44],[90,58,72,45,"eventType"],[90,67,72,54],[90,68,72,55],[91,6,73,2],[92,4,73,3],[93,6,73,3,"key"],[93,9,73,3],[94,6,73,3,"value"],[94,11,73,3],[94,13,74,2],[94,22,74,2,"listenerCount"],[94,35,74,15,"listenerCount"],[94,36,74,16,"eventType"],[94,45,74,25],[94,47,74,27],[95,8,75,4],[95,15,75,11,"RCTDeviceEventEmitter"],[95,45,75,32],[95,46,75,33,"listenerCount"],[95,59,75,46],[95,60,75,47,"eventType"],[95,69,75,56],[95,70,75,57],[96,6,76,2],[97,4,76,3],[98,2,76,3],[99,0,76,3]],"functionMap":{"names":["<global>","NativeEventEmitter","constructor","addListener","remove","removeListener","emit","removeAllListeners","listenerCount"],"mappings":"AAA;eCyB;ECC;GDK;EEC;cCK;ODQ;GFE;EIK;GJM;EKC;GLO;EMC;GNK;EOC;GPE"}},"type":"js/module"}]}