{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":47,"column":37,"index":1687}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":47,"column":37,"index":1687}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":44,"index":44}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"./Font","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":45},"end":{"line":2,"column":45,"index":90}}],"key":"2yP4rn7ehjB34qZtUKb2dWtaKtw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useFonts = void 0;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _$$_REQUIRE(_dependencyMap[2], \"react\");\n  var _Font = _$$_REQUIRE(_dependencyMap[3], \"./Font\");\n  function isMapLoaded(map) {\n    if (typeof map === 'string') {\n      return (0, _Font.isLoaded)(map);\n    } else {\n      return Object.keys(map).every(function (fontFamily) {\n        return (0, _Font.isLoaded)(fontFamily);\n      });\n    }\n  }\n  function useRuntimeFonts(map) {\n    var _useState = (0, _react.useState)(\n      // For web rehydration, we need to check if the fonts are already loaded during the static render.\n      // Native will also benefit from this optimization.\n      isMapLoaded(map)),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n    var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n    (0, _react.useEffect)(function () {\n      (0, _Font.loadAsync)(map).then(function () {\n        return setLoaded(true);\n      }).catch(setError);\n    }, []);\n    return [loaded, error];\n  }\n  function useStaticFonts(map) {\n    (0, _Font.loadAsync)(map);\n    return [true, null];\n  }\n  // @needsAudit\n  /**\n   * ```ts\n   * const [loaded, error] = useFonts({ ... });\n   * ```\n   * Load a map of fonts with [`loadAsync`](#loadasync). This returns a `boolean` if the fonts are\n   * loaded and ready to use. It also returns an error if something went wrong, to use in development.\n   *\n   * > Note, the fonts are not \"reloaded\" when you dynamically change the font map.\n   *\n   * @param map A map of `fontFamily`s to [`FontSource`](#fontsource)s. After loading the font you can\n   * use the key in the `fontFamily` style prop of a `Text` element.\n   *\n   * @return\n   * - __loaded__ (`boolean`) - A boolean to detect if the font for `fontFamily` has finished\n   * loading.\n   * - __error__ (`Error | null`) - An error encountered when loading the fonts.\n   */\n  var useFonts = exports.useFonts = typeof window === 'undefined' ? useStaticFonts : useRuntimeFonts;\n});","lineCount":61,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"_$$_REQUIRE"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,2,0],[9,6,2,0,"_Font"],[9,11,2,0],[9,14,2,0,"_$$_REQUIRE"],[9,25,2,0],[9,26,2,0,"_dependencyMap"],[9,40,2,0],[10,2,3,0],[10,11,3,9,"isMapLoaded"],[10,22,3,20,"isMapLoaded"],[10,23,3,21,"map"],[10,26,3,24],[10,28,3,26],[11,4,4,4],[11,8,4,8],[11,15,4,15,"map"],[11,18,4,18],[11,23,4,23],[11,31,4,31],[11,33,4,33],[12,6,5,8],[12,13,5,15],[12,17,5,15,"isLoaded"],[12,31,5,23],[12,33,5,24,"map"],[12,36,5,27],[12,37,5,28],[13,4,6,4],[13,5,6,5],[13,11,7,9],[14,6,8,8],[14,13,8,15,"Object"],[14,19,8,21],[14,20,8,22,"keys"],[14,24,8,26],[14,25,8,27,"map"],[14,28,8,30],[14,29,8,31],[14,30,8,32,"every"],[14,35,8,37],[14,36,8,38],[14,46,8,39,"fontFamily"],[14,56,8,49],[15,8,8,49],[15,15,8,54],[15,19,8,54,"isLoaded"],[15,33,8,62],[15,35,8,63,"fontFamily"],[15,45,8,73],[15,46,8,74],[16,6,8,74],[16,8,8,75],[17,4,9,4],[18,2,10,0],[19,2,11,0],[19,11,11,9,"useRuntimeFonts"],[19,26,11,24,"useRuntimeFonts"],[19,27,11,25,"map"],[19,30,11,28],[19,32,11,30],[20,4,12,4],[20,8,12,4,"_useState"],[20,17,12,4],[20,20,12,32],[20,24,12,32,"useState"],[20,39,12,40],[21,6,13,4],[22,6,14,4],[23,6,15,4,"isMapLoaded"],[23,17,15,15],[23,18,15,16,"map"],[23,21,15,19],[23,22,15,20],[23,23,15,21],[24,6,15,21,"_useState2"],[24,16,15,21],[24,23,15,21,"_slicedToArray2"],[24,38,15,21],[24,39,15,21,"default"],[24,46,15,21],[24,48,15,21,"_useState"],[24,57,15,21],[25,6,12,11,"loaded"],[25,12,12,17],[25,15,12,17,"_useState2"],[25,25,12,17],[26,6,12,19,"setLoaded"],[26,15,12,28],[26,18,12,28,"_useState2"],[26,28,12,28],[27,4,16,4],[27,8,16,4,"_useState3"],[27,18,16,4],[27,21,16,30],[27,25,16,30,"useState"],[27,40,16,38],[27,42,16,39],[27,46,16,43],[27,47,16,44],[28,6,16,44,"_useState4"],[28,16,16,44],[28,23,16,44,"_slicedToArray2"],[28,38,16,44],[28,39,16,44,"default"],[28,46,16,44],[28,48,16,44,"_useState3"],[28,58,16,44],[29,6,16,11,"error"],[29,11,16,16],[29,14,16,16,"_useState4"],[29,24,16,16],[30,6,16,18,"setError"],[30,14,16,26],[30,17,16,26,"_useState4"],[30,27,16,26],[31,4,17,4],[31,8,17,4,"useEffect"],[31,24,17,13],[31,26,17,14],[31,38,17,20],[32,6,18,8],[32,10,18,8,"loadAsync"],[32,25,18,17],[32,27,18,18,"map"],[32,30,18,21],[32,31,18,22],[32,32,19,13,"then"],[32,36,19,17],[32,37,19,18],[33,8,19,18],[33,15,19,24,"setLoaded"],[33,24,19,33],[33,25,19,34],[33,29,19,38],[33,30,19,39],[34,6,19,39],[34,8,19,40],[34,9,20,13,"catch"],[34,14,20,18],[34,15,20,19,"setError"],[34,23,20,27],[34,24,20,28],[35,4,21,4],[35,5,21,5],[35,7,21,7],[35,9,21,9],[35,10,21,10],[36,4,22,4],[36,11,22,11],[36,12,22,12,"loaded"],[36,18,22,18],[36,20,22,20,"error"],[36,25,22,25],[36,26,22,26],[37,2,23,0],[38,2,24,0],[38,11,24,9,"useStaticFonts"],[38,25,24,23,"useStaticFonts"],[38,26,24,24,"map"],[38,29,24,27],[38,31,24,29],[39,4,25,4],[39,8,25,4,"loadAsync"],[39,23,25,13],[39,25,25,14,"map"],[39,28,25,17],[39,29,25,18],[40,4,26,4],[40,11,26,11],[40,12,26,12],[40,16,26,16],[40,18,26,18],[40,22,26,22],[40,23,26,23],[41,2,27,0],[42,2,28,0],[43,2,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,0,33,0],[48,0,34,0],[49,0,35,0],[50,0,36,0],[51,0,37,0],[52,0,38,0],[53,0,39,0],[54,0,40,0],[55,0,41,0],[56,0,42,0],[57,0,43,0],[58,0,44,0],[59,0,45,0],[60,2,46,7],[60,6,46,13,"useFonts"],[60,14,46,21],[60,17,46,21,"exports"],[60,24,46,21],[60,25,46,21,"useFonts"],[60,33,46,21],[60,36,46,24],[60,43,46,31,"window"],[60,49,46,37],[60,54,46,42],[60,65,46,53],[60,68,46,56,"useStaticFonts"],[60,82,46,70],[60,85,46,73,"useRuntimeFonts"],[60,100,46,88],[61,0,46,89]],"functionMap":{"names":["<global>","isMapLoaded","Object.keys.every$argument_0","useRuntimeFonts","useEffect$argument_0","loadAsync.then$argument_0","useStaticFonts"],"mappings":"AAA;ACE;sCCK,oCD;CDE;AGC;cCM;kBCE,qBD;KDE;CHE;AMC;CNG"}},"type":"js/module"}]}