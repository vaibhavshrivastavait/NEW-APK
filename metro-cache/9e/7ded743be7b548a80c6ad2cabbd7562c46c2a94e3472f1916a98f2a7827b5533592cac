{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":144,"column":27,"index":4027}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":144,"column":27,"index":4027}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":144,"column":27,"index":4027}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ImageUriCache = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  /**\n   * Copyright (c) Nicolas Gallagher.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  var dataUriPattern = /^data:/;\n  var ImageUriCache = exports.ImageUriCache = /*#__PURE__*/function () {\n    function ImageUriCache() {\n      (0, _classCallCheck2.default)(this, ImageUriCache);\n    }\n    return (0, _createClass2.default)(ImageUriCache, null, [{\n      key: \"has\",\n      value: function has(uri) {\n        var entries = ImageUriCache._entries;\n        var isDataUri = dataUriPattern.test(uri);\n        return isDataUri || Boolean(entries[uri]);\n      }\n    }, {\n      key: \"add\",\n      value: function add(uri) {\n        var entries = ImageUriCache._entries;\n        var lastUsedTimestamp = Date.now();\n        if (entries[uri]) {\n          entries[uri].lastUsedTimestamp = lastUsedTimestamp;\n          entries[uri].refCount += 1;\n        } else {\n          entries[uri] = {\n            lastUsedTimestamp,\n            refCount: 1\n          };\n        }\n      }\n    }, {\n      key: \"remove\",\n      value: function remove(uri) {\n        var entries = ImageUriCache._entries;\n        if (entries[uri]) {\n          entries[uri].refCount -= 1;\n        }\n        // Free up entries when the cache is \"full\"\n        ImageUriCache._cleanUpIfNeeded();\n      }\n    }, {\n      key: \"_cleanUpIfNeeded\",\n      value: function _cleanUpIfNeeded() {\n        var entries = ImageUriCache._entries;\n        var imageUris = Object.keys(entries);\n        if (imageUris.length + 1 > ImageUriCache._maximumEntries) {\n          var leastRecentlyUsedKey;\n          var leastRecentlyUsedEntry;\n          imageUris.forEach(function (uri) {\n            var entry = entries[uri];\n            if ((!leastRecentlyUsedEntry || entry.lastUsedTimestamp < leastRecentlyUsedEntry.lastUsedTimestamp) && entry.refCount === 0) {\n              leastRecentlyUsedKey = uri;\n              leastRecentlyUsedEntry = entry;\n            }\n          });\n          if (leastRecentlyUsedKey) {\n            delete entries[leastRecentlyUsedKey];\n          }\n        }\n      }\n    }]);\n  }();\n  ImageUriCache._maximumEntries = 256;\n  ImageUriCache._entries = {};\n  var id = 0;\n  var requests = {};\n  var ImageLoader = {\n    abort(requestId) {\n      var image = requests[\"\" + requestId];\n      if (image) {\n        image.onerror = null;\n        image.onload = null;\n        image = null;\n        delete requests[\"\" + requestId];\n      }\n    },\n    getSize(uri, success, failure) {\n      var complete = false;\n      var interval = setInterval(callback, 16);\n      var requestId = ImageLoader.load(uri, callback, errorCallback);\n      function callback() {\n        var image = requests[\"\" + requestId];\n        if (image) {\n          var naturalHeight = image.naturalHeight,\n            naturalWidth = image.naturalWidth;\n          if (naturalHeight && naturalWidth) {\n            success(naturalWidth, naturalHeight);\n            complete = true;\n          }\n        }\n        if (complete) {\n          ImageLoader.abort(requestId);\n          clearInterval(interval);\n        }\n      }\n      function errorCallback() {\n        if (typeof failure === 'function') {\n          failure();\n        }\n        ImageLoader.abort(requestId);\n        clearInterval(interval);\n      }\n    },\n    has(uri) {\n      return ImageUriCache.has(uri);\n    },\n    load(uri, onLoad, onError) {\n      id += 1;\n      var image = new window.Image();\n      image.onerror = onError;\n      image.onload = function (e) {\n        // avoid blocking the main thread\n        var onDecode = function () {\n          return onLoad({\n            nativeEvent: e\n          });\n        };\n        if (typeof image.decode === 'function') {\n          // Safari currently throws exceptions when decoding svgs.\n          // We want to catch that error and allow the load handler\n          // to be forwarded to the onLoad handler in this case\n          image.decode().then(onDecode, onDecode);\n        } else {\n          setTimeout(onDecode, 0);\n        }\n      };\n      image.src = uri;\n      requests[\"\" + id] = image;\n      return id;\n    },\n    prefetch(uri) {\n      return new Promise(function (resolve, reject) {\n        ImageLoader.load(uri, function () {\n          // Add the uri to the cache so it can be immediately displayed when used\n          // but also immediately remove it to correctly reflect that it has no active references\n          ImageUriCache.add(uri);\n          ImageUriCache.remove(uri);\n          resolve();\n        }, reject);\n      });\n    },\n    queryCache(uris) {\n      var result = {};\n      uris.forEach(function (u) {\n        if (ImageUriCache.has(u)) {\n          result[u] = 'disk/memory';\n        }\n      });\n      return Promise.resolve(result);\n    }\n  };\n  var _default = exports.default = ImageLoader;\n});","lineCount":167,"map":[[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[18,2,10,0],[18,6,10,4,"dataUriPattern"],[18,20,10,18],[18,23,10,21],[18,31,10,29],[19,2,10,30],[19,6,11,13,"ImageUriCache"],[19,19,11,26],[19,22,11,26,"exports"],[19,29,11,26],[19,30,11,26,"ImageUriCache"],[19,43,11,26],[20,4,11,26],[20,13,11,26,"ImageUriCache"],[20,27,11,26],[21,6,11,26],[21,10,11,26,"_classCallCheck2"],[21,26,11,26],[21,27,11,26,"default"],[21,34,11,26],[21,42,11,26,"ImageUriCache"],[21,55,11,26],[22,4,11,26],[23,4,11,26],[23,15,11,26,"_createClass2"],[23,28,11,26],[23,29,11,26,"default"],[23,36,11,26],[23,38,11,26,"ImageUriCache"],[23,51,11,26],[24,6,11,26,"key"],[24,9,11,26],[25,6,11,26,"value"],[25,11,11,26],[25,13,12,2],[25,22,12,9,"has"],[25,25,12,12,"has"],[25,26,12,13,"uri"],[25,29,12,16],[25,31,12,18],[26,8,13,4],[26,12,13,8,"entries"],[26,19,13,15],[26,22,13,18,"ImageUriCache"],[26,35,13,31],[26,36,13,32,"_entries"],[26,44,13,40],[27,8,14,4],[27,12,14,8,"isDataUri"],[27,21,14,17],[27,24,14,20,"dataUriPattern"],[27,38,14,34],[27,39,14,35,"test"],[27,43,14,39],[27,44,14,40,"uri"],[27,47,14,43],[27,48,14,44],[28,8,15,4],[28,15,15,11,"isDataUri"],[28,24,15,20],[28,28,15,24,"Boolean"],[28,35,15,31],[28,36,15,32,"entries"],[28,43,15,39],[28,44,15,40,"uri"],[28,47,15,43],[28,48,15,44],[28,49,15,45],[29,6,16,2],[30,4,16,3],[31,6,16,3,"key"],[31,9,16,3],[32,6,16,3,"value"],[32,11,16,3],[32,13,17,2],[32,22,17,9,"add"],[32,25,17,12,"add"],[32,26,17,13,"uri"],[32,29,17,16],[32,31,17,18],[33,8,18,4],[33,12,18,8,"entries"],[33,19,18,15],[33,22,18,18,"ImageUriCache"],[33,35,18,31],[33,36,18,32,"_entries"],[33,44,18,40],[34,8,19,4],[34,12,19,8,"lastUsedTimestamp"],[34,29,19,25],[34,32,19,28,"Date"],[34,36,19,32],[34,37,19,33,"now"],[34,40,19,36],[34,41,19,37],[34,42,19,38],[35,8,20,4],[35,12,20,8,"entries"],[35,19,20,15],[35,20,20,16,"uri"],[35,23,20,19],[35,24,20,20],[35,26,20,22],[36,10,21,6,"entries"],[36,17,21,13],[36,18,21,14,"uri"],[36,21,21,17],[36,22,21,18],[36,23,21,19,"lastUsedTimestamp"],[36,40,21,36],[36,43,21,39,"lastUsedTimestamp"],[36,60,21,56],[37,10,22,6,"entries"],[37,17,22,13],[37,18,22,14,"uri"],[37,21,22,17],[37,22,22,18],[37,23,22,19,"refCount"],[37,31,22,27],[37,35,22,31],[37,36,22,32],[38,8,23,4],[38,9,23,5],[38,15,23,11],[39,10,24,6,"entries"],[39,17,24,13],[39,18,24,14,"uri"],[39,21,24,17],[39,22,24,18],[39,25,24,21],[40,12,25,8,"lastUsedTimestamp"],[40,29,25,25],[41,12,26,8,"refCount"],[41,20,26,16],[41,22,26,18],[42,10,27,6],[42,11,27,7],[43,8,28,4],[44,6,29,2],[45,4,29,3],[46,6,29,3,"key"],[46,9,29,3],[47,6,29,3,"value"],[47,11,29,3],[47,13,30,2],[47,22,30,9,"remove"],[47,28,30,15,"remove"],[47,29,30,16,"uri"],[47,32,30,19],[47,34,30,21],[48,8,31,4],[48,12,31,8,"entries"],[48,19,31,15],[48,22,31,18,"ImageUriCache"],[48,35,31,31],[48,36,31,32,"_entries"],[48,44,31,40],[49,8,32,4],[49,12,32,8,"entries"],[49,19,32,15],[49,20,32,16,"uri"],[49,23,32,19],[49,24,32,20],[49,26,32,22],[50,10,33,6,"entries"],[50,17,33,13],[50,18,33,14,"uri"],[50,21,33,17],[50,22,33,18],[50,23,33,19,"refCount"],[50,31,33,27],[50,35,33,31],[50,36,33,32],[51,8,34,4],[52,8,35,4],[53,8,36,4,"ImageUriCache"],[53,21,36,17],[53,22,36,18,"_cleanUpIfNeeded"],[53,38,36,34],[53,39,36,35],[53,40,36,36],[54,6,37,2],[55,4,37,3],[56,6,37,3,"key"],[56,9,37,3],[57,6,37,3,"value"],[57,11,37,3],[57,13,38,2],[57,22,38,9,"_cleanUpIfNeeded"],[57,38,38,25,"_cleanUpIfNeeded"],[57,39,38,25],[57,41,38,28],[58,8,39,4],[58,12,39,8,"entries"],[58,19,39,15],[58,22,39,18,"ImageUriCache"],[58,35,39,31],[58,36,39,32,"_entries"],[58,44,39,40],[59,8,40,4],[59,12,40,8,"imageUris"],[59,21,40,17],[59,24,40,20,"Object"],[59,30,40,26],[59,31,40,27,"keys"],[59,35,40,31],[59,36,40,32,"entries"],[59,43,40,39],[59,44,40,40],[60,8,41,4],[60,12,41,8,"imageUris"],[60,21,41,17],[60,22,41,18,"length"],[60,28,41,24],[60,31,41,27],[60,32,41,28],[60,35,41,31,"ImageUriCache"],[60,48,41,44],[60,49,41,45,"_maximumEntries"],[60,64,41,60],[60,66,41,62],[61,10,42,6],[61,14,42,10,"leastRecentlyUsedKey"],[61,34,42,30],[62,10,43,6],[62,14,43,10,"leastRecentlyUsedEntry"],[62,36,43,32],[63,10,44,6,"imageUris"],[63,19,44,15],[63,20,44,16,"forEach"],[63,27,44,23],[63,28,44,24],[63,38,44,24,"uri"],[63,41,44,27],[63,43,44,31],[64,12,45,8],[64,16,45,12,"entry"],[64,21,45,17],[64,24,45,20,"entries"],[64,31,45,27],[64,32,45,28,"uri"],[64,35,45,31],[64,36,45,32],[65,12,46,8],[65,16,46,12],[65,17,46,13],[65,18,46,14,"leastRecentlyUsedEntry"],[65,40,46,36],[65,44,46,40,"entry"],[65,49,46,45],[65,50,46,46,"lastUsedTimestamp"],[65,67,46,63],[65,70,46,66,"leastRecentlyUsedEntry"],[65,92,46,88],[65,93,46,89,"lastUsedTimestamp"],[65,110,46,106],[65,115,46,111,"entry"],[65,120,46,116],[65,121,46,117,"refCount"],[65,129,46,125],[65,134,46,130],[65,135,46,131],[65,137,46,133],[66,14,47,10,"leastRecentlyUsedKey"],[66,34,47,30],[66,37,47,33,"uri"],[66,40,47,36],[67,14,48,10,"leastRecentlyUsedEntry"],[67,36,48,32],[67,39,48,35,"entry"],[67,44,48,40],[68,12,49,8],[69,10,50,6],[69,11,50,7],[69,12,50,8],[70,10,51,6],[70,14,51,10,"leastRecentlyUsedKey"],[70,34,51,30],[70,36,51,32],[71,12,52,8],[71,19,52,15,"entries"],[71,26,52,22],[71,27,52,23,"leastRecentlyUsedKey"],[71,47,52,43],[71,48,52,44],[72,10,53,6],[73,8,54,4],[74,6,55,2],[75,4,55,3],[76,2,55,3],[77,2,57,0,"ImageUriCache"],[77,15,57,13],[77,16,57,14,"_maximumEntries"],[77,31,57,29],[77,34,57,32],[77,37,57,35],[78,2,58,0,"ImageUriCache"],[78,15,58,13],[78,16,58,14,"_entries"],[78,24,58,22],[78,27,58,25],[78,28,58,26],[78,29,58,27],[79,2,59,0],[79,6,59,4,"id"],[79,8,59,6],[79,11,59,9],[79,12,59,10],[80,2,60,0],[80,6,60,4,"requests"],[80,14,60,12],[80,17,60,15],[80,18,60,16],[80,19,60,17],[81,2,61,0],[81,6,61,4,"ImageLoader"],[81,17,61,15],[81,20,61,18],[82,4,62,2,"abort"],[82,9,62,7,"abort"],[82,10,62,8,"requestId"],[82,19,62,17],[82,21,62,19],[83,6,63,4],[83,10,63,8,"image"],[83,15,63,13],[83,18,63,16,"requests"],[83,26,63,24],[83,27,63,25],[83,29,63,27],[83,32,63,30,"requestId"],[83,41,63,39],[83,42,63,40],[84,6,64,4],[84,10,64,8,"image"],[84,15,64,13],[84,17,64,15],[85,8,65,6,"image"],[85,13,65,11],[85,14,65,12,"onerror"],[85,21,65,19],[85,24,65,22],[85,28,65,26],[86,8,66,6,"image"],[86,13,66,11],[86,14,66,12,"onload"],[86,20,66,18],[86,23,66,21],[86,27,66,25],[87,8,67,6,"image"],[87,13,67,11],[87,16,67,14],[87,20,67,18],[88,8,68,6],[88,15,68,13,"requests"],[88,23,68,21],[88,24,68,22],[88,26,68,24],[88,29,68,27,"requestId"],[88,38,68,36],[88,39,68,37],[89,6,69,4],[90,4,70,2],[90,5,70,3],[91,4,71,2,"getSize"],[91,11,71,9,"getSize"],[91,12,71,10,"uri"],[91,15,71,13],[91,17,71,15,"success"],[91,24,71,22],[91,26,71,24,"failure"],[91,33,71,31],[91,35,71,33],[92,6,72,4],[92,10,72,8,"complete"],[92,18,72,16],[92,21,72,19],[92,26,72,24],[93,6,73,4],[93,10,73,8,"interval"],[93,18,73,16],[93,21,73,19,"setInterval"],[93,32,73,30],[93,33,73,31,"callback"],[93,41,73,39],[93,43,73,41],[93,45,73,43],[93,46,73,44],[94,6,74,4],[94,10,74,8,"requestId"],[94,19,74,17],[94,22,74,20,"ImageLoader"],[94,33,74,31],[94,34,74,32,"load"],[94,38,74,36],[94,39,74,37,"uri"],[94,42,74,40],[94,44,74,42,"callback"],[94,52,74,50],[94,54,74,52,"errorCallback"],[94,67,74,65],[94,68,74,66],[95,6,75,4],[95,15,75,13,"callback"],[95,23,75,21,"callback"],[95,24,75,21],[95,26,75,24],[96,8,76,6],[96,12,76,10,"image"],[96,17,76,15],[96,20,76,18,"requests"],[96,28,76,26],[96,29,76,27],[96,31,76,29],[96,34,76,32,"requestId"],[96,43,76,41],[96,44,76,42],[97,8,77,6],[97,12,77,10,"image"],[97,17,77,15],[97,19,77,17],[98,10,78,8],[98,14,78,12,"naturalHeight"],[98,27,78,25],[98,30,78,28,"image"],[98,35,78,33],[98,36,78,34,"naturalHeight"],[98,49,78,47],[99,12,79,10,"naturalWidth"],[99,24,79,22],[99,27,79,25,"image"],[99,32,79,30],[99,33,79,31,"naturalWidth"],[99,45,79,43],[100,10,80,8],[100,14,80,12,"naturalHeight"],[100,27,80,25],[100,31,80,29,"naturalWidth"],[100,43,80,41],[100,45,80,43],[101,12,81,10,"success"],[101,19,81,17],[101,20,81,18,"naturalWidth"],[101,32,81,30],[101,34,81,32,"naturalHeight"],[101,47,81,45],[101,48,81,46],[102,12,82,10,"complete"],[102,20,82,18],[102,23,82,21],[102,27,82,25],[103,10,83,8],[104,8,84,6],[105,8,85,6],[105,12,85,10,"complete"],[105,20,85,18],[105,22,85,20],[106,10,86,8,"ImageLoader"],[106,21,86,19],[106,22,86,20,"abort"],[106,27,86,25],[106,28,86,26,"requestId"],[106,37,86,35],[106,38,86,36],[107,10,87,8,"clearInterval"],[107,23,87,21],[107,24,87,22,"interval"],[107,32,87,30],[107,33,87,31],[108,8,88,6],[109,6,89,4],[110,6,90,4],[110,15,90,13,"errorCallback"],[110,28,90,26,"errorCallback"],[110,29,90,26],[110,31,90,29],[111,8,91,6],[111,12,91,10],[111,19,91,17,"failure"],[111,26,91,24],[111,31,91,29],[111,41,91,39],[111,43,91,41],[112,10,92,8,"failure"],[112,17,92,15],[112,18,92,16],[112,19,92,17],[113,8,93,6],[114,8,94,6,"ImageLoader"],[114,19,94,17],[114,20,94,18,"abort"],[114,25,94,23],[114,26,94,24,"requestId"],[114,35,94,33],[114,36,94,34],[115,8,95,6,"clearInterval"],[115,21,95,19],[115,22,95,20,"interval"],[115,30,95,28],[115,31,95,29],[116,6,96,4],[117,4,97,2],[117,5,97,3],[118,4,98,2,"has"],[118,7,98,5,"has"],[118,8,98,6,"uri"],[118,11,98,9],[118,13,98,11],[119,6,99,4],[119,13,99,11,"ImageUriCache"],[119,26,99,24],[119,27,99,25,"has"],[119,30,99,28],[119,31,99,29,"uri"],[119,34,99,32],[119,35,99,33],[120,4,100,2],[120,5,100,3],[121,4,101,2,"load"],[121,8,101,6,"load"],[121,9,101,7,"uri"],[121,12,101,10],[121,14,101,12,"onLoad"],[121,20,101,18],[121,22,101,20,"onError"],[121,29,101,27],[121,31,101,29],[122,6,102,4,"id"],[122,8,102,6],[122,12,102,10],[122,13,102,11],[123,6,103,4],[123,10,103,8,"image"],[123,15,103,13],[123,18,103,16],[123,22,103,20,"window"],[123,28,103,26],[123,29,103,27,"Image"],[123,34,103,32],[123,35,103,33],[123,36,103,34],[124,6,104,4,"image"],[124,11,104,9],[124,12,104,10,"onerror"],[124,19,104,17],[124,22,104,20,"onError"],[124,29,104,27],[125,6,105,4,"image"],[125,11,105,9],[125,12,105,10,"onload"],[125,18,105,16],[125,21,105,19],[125,31,105,19,"e"],[125,32,105,20],[125,34,105,24],[126,8,106,6],[127,8,107,6],[127,12,107,10,"onDecode"],[127,20,107,18],[127,23,107,21],[127,32,107,21,"onDecode"],[127,33,107,21],[128,10,107,21],[128,17,107,27,"onLoad"],[128,23,107,33],[128,24,107,34],[129,12,108,8,"nativeEvent"],[129,23,108,19],[129,25,108,21,"e"],[130,10,109,6],[130,11,109,7],[130,12,109,8],[131,8,109,8],[132,8,110,6],[132,12,110,10],[132,19,110,17,"image"],[132,24,110,22],[132,25,110,23,"decode"],[132,31,110,29],[132,36,110,34],[132,46,110,44],[132,48,110,46],[133,10,111,8],[134,10,112,8],[135,10,113,8],[136,10,114,8,"image"],[136,15,114,13],[136,16,114,14,"decode"],[136,22,114,20],[136,23,114,21],[136,24,114,22],[136,25,114,23,"then"],[136,29,114,27],[136,30,114,28,"onDecode"],[136,38,114,36],[136,40,114,38,"onDecode"],[136,48,114,46],[136,49,114,47],[137,8,115,6],[137,9,115,7],[137,15,115,13],[138,10,116,8,"setTimeout"],[138,20,116,18],[138,21,116,19,"onDecode"],[138,29,116,27],[138,31,116,29],[138,32,116,30],[138,33,116,31],[139,8,117,6],[140,6,118,4],[140,7,118,5],[141,6,119,4,"image"],[141,11,119,9],[141,12,119,10,"src"],[141,15,119,13],[141,18,119,16,"uri"],[141,21,119,19],[142,6,120,4,"requests"],[142,14,120,12],[142,15,120,13],[142,17,120,15],[142,20,120,18,"id"],[142,22,120,20],[142,23,120,21],[142,26,120,24,"image"],[142,31,120,29],[143,6,121,4],[143,13,121,11,"id"],[143,15,121,13],[144,4,122,2],[144,5,122,3],[145,4,123,2,"prefetch"],[145,12,123,10,"prefetch"],[145,13,123,11,"uri"],[145,16,123,14],[145,18,123,16],[146,6,124,4],[146,13,124,11],[146,17,124,15,"Promise"],[146,24,124,22],[146,25,124,23],[146,35,124,24,"resolve"],[146,42,124,31],[146,44,124,33,"reject"],[146,50,124,39],[146,52,124,44],[147,8,125,6,"ImageLoader"],[147,19,125,17],[147,20,125,18,"load"],[147,24,125,22],[147,25,125,23,"uri"],[147,28,125,26],[147,30,125,28],[147,42,125,34],[148,10,126,8],[149,10,127,8],[150,10,128,8,"ImageUriCache"],[150,23,128,21],[150,24,128,22,"add"],[150,27,128,25],[150,28,128,26,"uri"],[150,31,128,29],[150,32,128,30],[151,10,129,8,"ImageUriCache"],[151,23,129,21],[151,24,129,22,"remove"],[151,30,129,28],[151,31,129,29,"uri"],[151,34,129,32],[151,35,129,33],[152,10,130,8,"resolve"],[152,17,130,15],[152,18,130,16],[152,19,130,17],[153,8,131,6],[153,9,131,7],[153,11,131,9,"reject"],[153,17,131,15],[153,18,131,16],[154,6,132,4],[154,7,132,5],[154,8,132,6],[155,4,133,2],[155,5,133,3],[156,4,134,2,"queryCache"],[156,14,134,12,"queryCache"],[156,15,134,13,"uris"],[156,19,134,17],[156,21,134,19],[157,6,135,4],[157,10,135,8,"result"],[157,16,135,14],[157,19,135,17],[157,20,135,18],[157,21,135,19],[158,6,136,4,"uris"],[158,10,136,8],[158,11,136,9,"forEach"],[158,18,136,16],[158,19,136,17],[158,29,136,17,"u"],[158,30,136,18],[158,32,136,22],[159,8,137,6],[159,12,137,10,"ImageUriCache"],[159,25,137,23],[159,26,137,24,"has"],[159,29,137,27],[159,30,137,28,"u"],[159,31,137,29],[159,32,137,30],[159,34,137,32],[160,10,138,8,"result"],[160,16,138,14],[160,17,138,15,"u"],[160,18,138,16],[160,19,138,17],[160,22,138,20],[160,35,138,33],[161,8,139,6],[162,6,140,4],[162,7,140,5],[162,8,140,6],[163,6,141,4],[163,13,141,11,"Promise"],[163,20,141,18],[163,21,141,19,"resolve"],[163,28,141,26],[163,29,141,27,"result"],[163,35,141,33],[163,36,141,34],[164,4,142,2],[165,2,143,0],[165,3,143,1],[166,2,143,2],[166,6,143,2,"_default"],[166,14,143,2],[166,17,143,2,"exports"],[166,24,143,2],[166,25,143,2,"default"],[166,32,143,2],[166,35,144,15,"ImageLoader"],[166,46,144,26],[167,0,144,26]],"functionMap":{"names":["<global>","ImageUriCache","ImageUriCache.has","ImageUriCache.add","ImageUriCache.remove","ImageUriCache._cleanUpIfNeeded","imageUris.forEach$argument_0","ImageLoader.abort","ImageLoader.getSize","callback","errorCallback","ImageLoader.has","ImageLoader.load","image.onload","onDecode","ImageLoader.prefetch","Promise$argument_0","ImageLoader.load$argument_1","ImageLoader.queryCache","uris.forEach$argument_0"],"mappings":"AAA;OCU;ECC;GDI;EEC;GFY;EGC;GHO;EIC;wBCM;ODM;GJK;CDC;EOM;GPQ;EQC;ICI;KDc;IEC;KFM;GRC;EWC;GXE;EYC;mBCI;qBCE;QDE;KDS;GZI;EeC;uBCC;4BCC;ODM;KDC;GfC;EkBC;iBCE;KDI;GlBE"}},"type":"js/module"}]}