{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":42,"column":36,"index":1482}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"react-native-web/dist/exports/Platform","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":42,"column":36,"index":1482}}],"key":"jM/HC84YZkM9kLoiCo0Bpf0Xr+w="}},{"name":"./environment/browser","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0,"index":64},"end":{"line":2,"column":112,"index":176}}],"key":"QaRxbiTri0rKv6sXYARasJiXIUI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"react-native-web/dist/exports/Platform\"));\n  var _browser = _$$_REQUIRE(_dependencyMap[2], \"./environment/browser\");\n  var Platform = {\n    /**\n     * Denotes the currently running platform.\n     * Can be one of ios, android, web.\n     */\n    OS: _Platform.default.OS,\n    /**\n     * Returns the value with the matching platform.\n     * Object keys can be any of ios, android, native, web, default.\n     *\n     * @ios ios, native, default\n     * @android android, native, default\n     * @web web, default\n     */\n    select: _Platform.default.select,\n    /**\n     * Denotes if the DOM API is available in the current environment.\n     * The DOM is not available in native React runtimes and Node.js.\n     */\n    isDOMAvailable: _browser.isDOMAvailable,\n    /**\n     * Denotes if the current environment can attach event listeners\n     * to the window. This will return false in native React\n     * runtimes and Node.js.\n     */\n    canUseEventListeners: _browser.canUseEventListeners,\n    /**\n     * Denotes if the current environment can inspect properties of the\n     * screen on which the current window is being rendered. This will\n     * return false in native React runtimes and Node.js.\n     */\n    canUseViewport: _browser.canUseViewport,\n    /**\n     * If the JavaScript is being executed in a remote JavaScript environment.\n     * When `true`, synchronous native invocations cannot be executed.\n     */\n    isAsyncDebugging: _browser.isAsyncDebugging\n  };\n  var _default = exports.default = Platform;\n});","lineCount":48,"map":[[8,2,2,0],[8,6,2,0,"_browser"],[8,14,2,0],[8,17,2,0,"_$$_REQUIRE"],[8,28,2,0],[8,29,2,0,"_dependencyMap"],[8,43,2,0],[9,2,3,0],[9,6,3,6,"Platform"],[9,14,3,14],[9,17,3,17],[10,4,4,4],[11,0,5,0],[12,0,6,0],[13,0,7,0],[14,4,8,4,"OS"],[14,6,8,6],[14,8,8,8,"ReactNativePlatform"],[14,25,8,27],[14,26,8,28,"OS"],[14,28,8,30],[15,4,9,4],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,4,17,4,"select"],[23,10,17,10],[23,12,17,12,"ReactNativePlatform"],[23,29,17,31],[23,30,17,32,"select"],[23,36,17,38],[24,4,18,4],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,4,22,4,"isDOMAvailable"],[28,18,22,18],[28,20,22,4,"isDOMAvailable"],[28,43,22,18],[29,4,23,4],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,4,28,4,"canUseEventListeners"],[34,24,28,24],[34,26,28,4,"canUseEventListeners"],[34,55,28,24],[35,4,29,4],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,4,34,4,"canUseViewport"],[40,18,34,18],[40,20,34,4,"canUseViewport"],[40,43,34,18],[41,4,35,4],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,4,39,4,"isAsyncDebugging"],[45,20,39,20],[45,22,39,4,"isAsyncDebugging"],[46,2,40,0],[46,3,40,1],[47,2,40,2],[47,6,40,2,"_default"],[47,14,40,2],[47,17,40,2,"exports"],[47,24,40,2],[47,25,40,2,"default"],[47,32,40,2],[47,35,41,15,"Platform"],[47,43,41,23],[48,0,41,23]],"functionMap":{"names":["<global>"],"mappings":"AAA"}},"type":"js/module"}]}