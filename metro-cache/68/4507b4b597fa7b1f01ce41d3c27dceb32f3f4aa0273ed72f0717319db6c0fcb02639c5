{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":51,"column":31,"index":1818}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"./bytesToUuid","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"SLSd7UmHl/wWaNfgMTrbfkkH0UQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n  var _bytesToUuid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./bytesToUuid\"));\n  function uuidToBytes(uuid) {\n    // Note: We assume we're being passed a valid uuid string\n    var bytes = [];\n    uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {\n      bytes.push(parseInt(hex, 16));\n      return '';\n    });\n    return bytes;\n  }\n  function stringToBytes(str) {\n    str = unescape(encodeURIComponent(str)); // UTF8 escape\n    var bytes = new Array(str.length);\n    for (var i = 0; i < str.length; i++) {\n      bytes[i] = str.charCodeAt(i);\n    }\n    return bytes;\n  }\n  function _default(name, version, hashfunc) {\n    var generateUUID = function (value, namespace, buf, offset) {\n      var off = buf && offset || 0;\n      if (typeof value == 'string') value = stringToBytes(value);\n      if (typeof namespace == 'string') namespace = uuidToBytes(namespace);\n      if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n      if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n      // Per 4.3\n      var bytes = hashfunc(namespace.concat(value));\n      bytes[6] = bytes[6] & 0x0f | version;\n      bytes[8] = bytes[8] & 0x3f | 0x80;\n      if (buf) {\n        for (var idx = 0; idx < 16; ++idx) {\n          buf[off + idx] = bytes[idx];\n        }\n      }\n      return (0, _bytesToUuid.default)(bytes);\n    };\n    // Function#name is not settable on some platforms (#270)\n    try {\n      generateUUID.name = name;\n    } catch {}\n    // Pre-defined namespaces, per Appendix C\n    generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n    generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n    return generateUUID;\n  }\n});","lineCount":52,"map":[[7,2,1,0],[7,6,1,0,"_bytesToUuid"],[7,18,1,0],[7,21,1,0,"_interopRequireDefault"],[7,43,1,0],[7,44,1,0,"_$$_REQUIRE"],[7,55,1,0],[7,56,1,0,"_dependencyMap"],[7,70,1,0],[8,2,2,0],[8,11,2,9,"uuidToBytes"],[8,22,2,20,"uuidToBytes"],[8,23,2,21,"uuid"],[8,27,2,25],[8,29,2,27],[9,4,3,4],[10,4,4,4],[10,8,4,10,"bytes"],[10,13,4,15],[10,16,4,18],[10,18,4,20],[11,4,5,4,"uuid"],[11,8,5,8],[11,9,5,9,"replace"],[11,16,5,16],[11,17,5,17],[11,34,5,34],[11,36,5,36],[11,46,5,37,"hex"],[11,49,5,40],[11,51,5,45],[12,6,6,8,"bytes"],[12,11,6,13],[12,12,6,14,"push"],[12,16,6,18],[12,17,6,19,"parseInt"],[12,25,6,27],[12,26,6,28,"hex"],[12,29,6,31],[12,31,6,33],[12,33,6,35],[12,34,6,36],[12,35,6,37],[13,6,7,8],[13,13,7,15],[13,15,7,17],[14,4,8,4],[14,5,8,5],[14,6,8,6],[15,4,9,4],[15,11,9,11,"bytes"],[15,16,9,16],[16,2,10,0],[17,2,11,0],[17,11,11,9,"stringToBytes"],[17,24,11,22,"stringToBytes"],[17,25,11,23,"str"],[17,28,11,26],[17,30,11,28],[18,4,12,4,"str"],[18,7,12,7],[18,10,12,10,"unescape"],[18,18,12,18],[18,19,12,19,"encodeURIComponent"],[18,37,12,37],[18,38,12,38,"str"],[18,41,12,41],[18,42,12,42],[18,43,12,43],[18,44,12,44],[18,45,12,45],[19,4,13,4],[19,8,13,10,"bytes"],[19,13,13,15],[19,16,13,18],[19,20,13,22,"Array"],[19,25,13,27],[19,26,13,28,"str"],[19,29,13,31],[19,30,13,32,"length"],[19,36,13,38],[19,37,13,39],[20,4,14,4],[20,9,14,9],[20,13,14,13,"i"],[20,14,14,14],[20,17,14,17],[20,18,14,18],[20,20,14,20,"i"],[20,21,14,21],[20,24,14,24,"str"],[20,27,14,27],[20,28,14,28,"length"],[20,34,14,34],[20,36,14,36,"i"],[20,37,14,37],[20,39,14,39],[20,41,14,41],[21,6,15,8,"bytes"],[21,11,15,13],[21,12,15,14,"i"],[21,13,15,15],[21,14,15,16],[21,17,15,19,"str"],[21,20,15,22],[21,21,15,23,"charCodeAt"],[21,31,15,33],[21,32,15,34,"i"],[21,33,15,35],[21,34,15,36],[22,4,16,4],[23,4,17,4],[23,11,17,11,"bytes"],[23,16,17,16],[24,2,18,0],[25,2,19,15],[25,11,19,15,"_default"],[25,20,19,25,"name"],[25,24,19,29],[25,26,19,31,"version"],[25,33,19,38],[25,35,19,40,"hashfunc"],[25,43,19,48],[25,45,19,50],[26,4,20,4],[26,8,20,10,"generateUUID"],[26,20,20,22],[26,23,20,25],[26,32,20,25,"generateUUID"],[26,33,20,35,"value"],[26,38,20,40],[26,40,20,42,"namespace"],[26,49,20,51],[26,51,20,53,"buf"],[26,54,20,56],[26,56,20,58,"offset"],[26,62,20,64],[26,64,20,66],[27,6,21,8],[27,10,21,14,"off"],[27,13,21,17],[27,16,21,21,"buf"],[27,19,21,24],[27,23,21,28,"offset"],[27,29,21,34],[27,33,21,39],[27,34,21,40],[28,6,22,8],[28,10,22,12],[28,17,22,19,"value"],[28,22,22,24],[28,26,22,28],[28,34,22,36],[28,36,23,12,"value"],[28,41,23,17],[28,44,23,20,"stringToBytes"],[28,57,23,33],[28,58,23,34,"value"],[28,63,23,39],[28,64,23,40],[29,6,24,8],[29,10,24,12],[29,17,24,19,"namespace"],[29,26,24,28],[29,30,24,32],[29,38,24,40],[29,40,25,12,"namespace"],[29,49,25,21],[29,52,25,24,"uuidToBytes"],[29,63,25,35],[29,64,25,36,"namespace"],[29,73,25,45],[29,74,25,46],[30,6,26,8],[30,10,26,12],[30,11,26,13,"Array"],[30,16,26,18],[30,17,26,19,"isArray"],[30,24,26,26],[30,25,26,27,"value"],[30,30,26,32],[30,31,26,33],[30,33,27,12],[30,39,27,18,"TypeError"],[30,48,27,27],[30,49,27,28],[30,82,27,61],[30,83,27,62],[31,6,28,8],[31,10,28,12],[31,11,28,13,"Array"],[31,16,28,18],[31,17,28,19,"isArray"],[31,24,28,26],[31,25,28,27,"namespace"],[31,34,28,36],[31,35,28,37],[31,39,28,41,"namespace"],[31,48,28,50],[31,49,28,51,"length"],[31,55,28,57],[31,60,28,62],[31,62,28,64],[31,64,29,12],[31,70,29,18,"TypeError"],[31,79,29,27],[31,80,29,28],[31,141,29,89],[31,142,29,90],[32,6,30,8],[33,6,31,8],[33,10,31,14,"bytes"],[33,15,31,19],[33,18,31,22,"hashfunc"],[33,26,31,30],[33,27,31,31,"namespace"],[33,36,31,40],[33,37,31,41,"concat"],[33,43,31,47],[33,44,31,48,"value"],[33,49,31,53],[33,50,31,54],[33,51,31,55],[34,6,32,8,"bytes"],[34,11,32,13],[34,12,32,14],[34,13,32,15],[34,14,32,16],[34,17,32,20,"bytes"],[34,22,32,25],[34,23,32,26],[34,24,32,27],[34,25,32,28],[34,28,32,31],[34,32,32,35],[34,35,32,39,"version"],[34,42,32,46],[35,6,33,8,"bytes"],[35,11,33,13],[35,12,33,14],[35,13,33,15],[35,14,33,16],[35,17,33,20,"bytes"],[35,22,33,25],[35,23,33,26],[35,24,33,27],[35,25,33,28],[35,28,33,31],[35,32,33,35],[35,35,33,39],[35,39,33,43],[36,6,34,8],[36,10,34,12,"buf"],[36,13,34,15],[36,15,34,17],[37,8,35,12],[37,13,35,17],[37,17,35,21,"idx"],[37,20,35,24],[37,23,35,27],[37,24,35,28],[37,26,35,30,"idx"],[37,29,35,33],[37,32,35,36],[37,34,35,38],[37,36,35,40],[37,38,35,42,"idx"],[37,41,35,45],[37,43,35,47],[38,10,36,16,"buf"],[38,13,36,19],[38,14,36,20,"off"],[38,17,36,23],[38,20,36,26,"idx"],[38,23,36,29],[38,24,36,30],[38,27,36,33,"bytes"],[38,32,36,38],[38,33,36,39,"idx"],[38,36,36,42],[38,37,36,43],[39,8,37,12],[40,6,38,8],[41,6,39,8],[41,13,39,15],[41,17,39,15,"bytesToUuid"],[41,37,39,26],[41,39,39,27,"bytes"],[41,44,39,32],[41,45,39,33],[42,4,40,4],[42,5,40,5],[43,4,41,4],[44,4,42,4],[44,8,42,8],[45,6,43,8,"generateUUID"],[45,18,43,20],[45,19,43,21,"name"],[45,23,43,25],[45,26,43,28,"name"],[45,30,43,32],[46,4,44,4],[46,5,44,5],[46,6,45,4],[46,12,45,10],[46,13,45,12],[47,4,46,4],[48,4,47,4,"generateUUID"],[48,16,47,16],[48,17,47,17,"DNS"],[48,20,47,20],[48,23,47,23],[48,61,47,61],[49,4,48,4,"generateUUID"],[49,16,48,16],[49,17,48,17,"URL"],[49,20,48,20],[49,23,48,23],[49,61,48,61],[50,4,49,4],[50,11,49,11,"generateUUID"],[50,23,49,23],[51,2,50,0],[52,0,50,1]],"functionMap":{"names":["<global>","uuidToBytes","uuid.replace$argument_1","stringToBytes","default","generateUUID"],"mappings":"AAA;ACC;oCCG;KDG;CDE;AGC;CHO;eIC;yBCC;KDoB;CJU"}},"type":"js/module"}]}