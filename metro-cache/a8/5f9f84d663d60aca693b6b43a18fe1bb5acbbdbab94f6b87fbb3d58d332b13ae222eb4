{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":460,"column":2,"index":17530}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":65,"index":65}}],"key":"cO+kR170JcyEW83FKera/I0tgxg="}},{"name":"./NativeAnimatedModule","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0,"index":276},"end":{"line":12,"column":66,"index":342}}],"key":"2IHkob69BqWPcRW7TYgRTU/H7xU="}},{"name":"./NativeAnimatedTurboModule","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":343},"end":{"line":13,"column":68,"index":411}}],"key":"5lLuBbz92WMWkrATIjmhcGDqF0g="}},{"name":"../EventEmitter/NativeEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":412},"end":{"line":14,"column":68,"index":480}}],"key":"FxUYVDH3eq4FUmUOIfY0RLK75tc="}},{"name":"../Utilities/Platform","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":481},"end":{"line":15,"column":45,"index":526}}],"key":"3JpW2lByst9OohsYWa25ZOinj2I="}},{"name":"../ReactNative/ReactNativeFeatureFlags","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":527},"end":{"line":16,"column":77,"index":604}}],"key":"axbfbINLgnsR8mrK5Pa2FD78/P8="}},{"name":"fbjs/lib/invariant","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":605},"end":{"line":17,"column":43,"index":648}}],"key":"avnjoAx2FQYjx6eZ7ALk+OuZk68="}},{"name":"../EventEmitter/RCTDeviceEventEmitter","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":649},"end":{"line":18,"column":74,"index":723}}],"key":"8/8s2qHajvAK0ZSPYhrCXcF24uY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.API = void 0;\n  exports.addWhitelistedInterpolationParam = addWhitelistedInterpolationParam;\n  exports.addWhitelistedStyleProp = addWhitelistedStyleProp;\n  exports.addWhitelistedTransformProp = addWhitelistedTransformProp;\n  exports.assertNativeAnimatedModule = assertNativeAnimatedModule;\n  exports.default = void 0;\n  exports.generateNewAnimationId = generateNewAnimationId;\n  exports.generateNewNodeTag = generateNewNodeTag;\n  exports.isSupportedColorStyleProp = isSupportedColorStyleProp;\n  exports.isSupportedInterpolationParam = isSupportedInterpolationParam;\n  exports.isSupportedStyleProp = isSupportedStyleProp;\n  exports.isSupportedTransformProp = isSupportedTransformProp;\n  exports.shouldUseNativeDriver = shouldUseNativeDriver;\n  exports.transformDataType = transformDataType;\n  exports.validateInterpolation = validateInterpolation;\n  exports.validateStyles = validateStyles;\n  exports.validateTransform = validateTransform;\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread2\"));\n  var _NativeAnimatedModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./NativeAnimatedModule\"));\n  var _NativeAnimatedTurboModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./NativeAnimatedTurboModule\"));\n  var _NativeEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../EventEmitter/NativeEventEmitter\"));\n  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../Utilities/Platform\"));\n  var _ReactNativeFeatureFlags = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../ReactNative/ReactNativeFeatureFlags\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"fbjs/lib/invariant\"));\n  var _RCTDeviceEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../EventEmitter/RCTDeviceEventEmitter\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  // TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\n  var NativeAnimatedModule = _Platform.default.OS === 'ios' && global.RN$Bridgeless === true ? _NativeAnimatedTurboModule.default : _NativeAnimatedModule.default;\n  var __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\n  var __nativeAnimationIdCount = 1; /* used for started animations */\n\n  var nativeEventEmitter;\n  var waitingForQueuedOperations = new Set();\n  var queueOperations = false;\n  var queue = [];\n  // $FlowFixMe\n  var singleOpQueue = [];\n  var useSingleOpBatching = false;\n  _Platform.default.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && _ReactNativeFeatureFlags.default.animatedShouldUseSingleOp();\n  var flushQueueTimeout = null;\n  var eventListenerGetValueCallbacks = {};\n  var eventListenerAnimationFinishedCallbacks = {};\n  var globalEventEmitterGetValueListener = null;\n  var globalEventEmitterAnimationFinishedListener = null;\n  var nativeOps = useSingleOpBatching ? function () {\n    var apis = ['createAnimatedNode',\n    // 1\n    'updateAnimatedNodeConfig',\n    // 2\n    'getValue',\n    // 3\n    'startListeningToAnimatedNodeValue',\n    // 4\n    'stopListeningToAnimatedNodeValue',\n    // 5\n    'connectAnimatedNodes',\n    // 6\n    'disconnectAnimatedNodes',\n    // 7\n    'startAnimatingNode',\n    // 8\n    'stopAnimation',\n    // 9\n    'setAnimatedNodeValue',\n    // 10\n    'setAnimatedNodeOffset',\n    // 11\n    'flattenAnimatedNodeOffset',\n    // 12\n    'extractAnimatedNodeOffset',\n    // 13\n    'connectAnimatedNodeToView',\n    // 14\n    'disconnectAnimatedNodeFromView',\n    // 15\n    'restoreDefaultValues',\n    // 16\n    'dropAnimatedNode',\n    // 17\n    'addAnimatedEventToView',\n    // 18\n    'removeAnimatedEventFromView',\n    // 19\n    'addListener',\n    // 20\n    'removeListener' // 21\n    ];\n    return apis.reduce(function (acc, functionName, i) {\n      // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n      // $FlowFixMe[prop-missing]\n      acc[functionName] = i + 1;\n      return acc;\n    }, {});\n  }() : NativeAnimatedModule;\n\n  /**\n   * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n   * the native module methods, and automatic queue management on Android\n   */\n  var API = exports.API = {\n    getValue: function getValue(tag, saveValueCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (saveValueCallback) {\n          eventListenerGetValueCallbacks[tag] = saveValueCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.getValue, tag);\n      } else {\n        API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n      }\n    },\n    setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n      waitingForQueuedOperations.add(id);\n      queueOperations = true;\n      if (_ReactNativeFeatureFlags.default.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n        clearTimeout(flushQueueTimeout);\n      }\n    },\n    unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n      waitingForQueuedOperations.delete(id);\n      if (waitingForQueuedOperations.size === 0) {\n        queueOperations = false;\n        API.disableQueue();\n      }\n    },\n    disableQueue: function disableQueue() {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (_ReactNativeFeatureFlags.default.animatedShouldDebounceQueueFlush()) {\n        var prevTimeout = flushQueueTimeout;\n        clearImmediate(prevTimeout);\n        flushQueueTimeout = setImmediate(API.flushQueue);\n      } else {\n        API.flushQueue();\n      }\n    },\n    flushQueue: function flushQueue() {\n      /*\n      invariant(NativeAnimatedModule, 'Native animated module is not available');\n      flushQueueTimeout = null;\n       // Early returns before calling any APIs\n      if (useSingleOpBatching && singleOpQueue.length === 0) {\n        return;\n      }\n      if (!useSingleOpBatching && queue.length === 0) {\n        return;\n      }\n       if (useSingleOpBatching) {\n        // Set up event listener for callbacks if it's not set up\n        if (\n          !globalEventEmitterGetValueListener ||\n          !globalEventEmitterAnimationFinishedListener\n        ) {\n          setupGlobalEventEmitterListeners();\n        }\n        // Single op batching doesn't use callback functions, instead we\n        // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n        // JSI functions across to native code; but also, TM infrastructure currently\n        // does not support packing a function into native arrays.\n        NativeAnimatedModule.queueAndExecuteBatchedOperations?.(singleOpQueue);\n        singleOpQueue.length = 0;\n      } else {\n        Platform.OS === 'android' && NativeAnimatedModule.startOperationBatch?.();\n        for (let q = 0, l = queue.length; q < l; q++) {\n          queue[q]();\n        }\n        queue.length = 0;\n        Platform.OS === 'android' &&\n          NativeAnimatedModule.finishOperationBatch?.();\n      }\n      */\n    },\n    queueOperation: function queueOperation(fn) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (useSingleOpBatching) {\n        // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n        // $FlowFixMe: surprise, fn is actually a number\n        singleOpQueue.push(fn, ...args);\n        return;\n      }\n\n      // If queueing is explicitly on, *or* the queue has not yet\n      // been flushed, use the queue. This is to prevent operations\n      // from being executed out of order.\n      if (queueOperations || queue.length !== 0) {\n        queue.push(function () {\n          return fn(...args);\n        });\n      } else {\n        fn(...args);\n      }\n    },\n    createAnimatedNode: function createAnimatedNode(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n    },\n    updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      //if (nativeOps.updateAnimatedNodeConfig) {\n      //  API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n      //}\n    },\n    startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n    },\n    stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n    },\n    connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n    },\n    disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n    },\n    startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      if (useSingleOpBatching) {\n        if (endCallback) {\n          eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n        }\n        // $FlowFixMe\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config);\n      } else {\n        API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n      }\n    },\n    stopAnimation: function stopAnimation(animationId) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.stopAnimation, animationId);\n    },\n    setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n    },\n    setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n    },\n    flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n    },\n    extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n    },\n    connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n    },\n    disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n    },\n    restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      // Backwards compat with older native runtimes, can be removed later.\n      if (nativeOps.restoreDefaultValues != null) {\n        API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n      }\n    },\n    dropAnimatedNode: function dropAnimatedNode(tag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.dropAnimatedNode, tag);\n    },\n    addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n    },\n    removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n      (0, _invariant.default)(nativeOps, 'Native animated module is not available');\n      API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n    }\n  };\n  function setupGlobalEventEmitterListeners() {\n    globalEventEmitterGetValueListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleGetValue', function (params) {\n      var tag = params.tag;\n      var callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    });\n    globalEventEmitterAnimationFinishedListener = _RCTDeviceEventEmitter.default.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n      var animationId = params.animationId;\n      var callback = eventListenerAnimationFinishedCallbacks[animationId];\n      if (!callback) {\n        return;\n      }\n      callback(params);\n      delete eventListenerAnimationFinishedCallbacks[animationId];\n    });\n  }\n\n  /**\n   * Styles allowed by the native animated implementation.\n   *\n   * In general native animated implementation should support any numeric or color property that\n   * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n   */\n  var SUPPORTED_COLOR_STYLES = {\n    backgroundColor: true,\n    borderBottomColor: true,\n    borderColor: true,\n    borderEndColor: true,\n    borderLeftColor: true,\n    borderRightColor: true,\n    borderStartColor: true,\n    borderTopColor: true,\n    color: true,\n    tintColor: true\n  };\n  var SUPPORTED_STYLES = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, SUPPORTED_COLOR_STYLES), {}, {\n    borderBottomEndRadius: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomStartRadius: true,\n    borderRadius: true,\n    borderTopEndRadius: true,\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderTopStartRadius: true,\n    elevation: true,\n    opacity: true,\n    transform: true,\n    zIndex: true,\n    /* ios styles */\n    shadowOpacity: true,\n    shadowRadius: true,\n    /* legacy android transform properties */\n    scaleX: true,\n    scaleY: true,\n    translateX: true,\n    translateY: true\n  });\n  var SUPPORTED_TRANSFORMS = {\n    translateX: true,\n    translateY: true,\n    scale: true,\n    scaleX: true,\n    scaleY: true,\n    rotate: true,\n    rotateX: true,\n    rotateY: true,\n    rotateZ: true,\n    perspective: true\n  };\n  var SUPPORTED_INTERPOLATION_PARAMS = {\n    inputRange: true,\n    outputRange: true,\n    extrapolate: true,\n    extrapolateRight: true,\n    extrapolateLeft: true\n  };\n  function addWhitelistedStyleProp(prop) {\n    SUPPORTED_STYLES[prop] = true;\n  }\n  function addWhitelistedTransformProp(prop) {\n    SUPPORTED_TRANSFORMS[prop] = true;\n  }\n  function addWhitelistedInterpolationParam(param) {\n    SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n  }\n  function isSupportedColorStyleProp(prop) {\n    return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n  }\n  function isSupportedStyleProp(prop) {\n    return SUPPORTED_STYLES.hasOwnProperty(prop);\n  }\n  function isSupportedTransformProp(prop) {\n    return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n  }\n  function isSupportedInterpolationParam(param) {\n    return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n  }\n  function validateTransform(configs) {\n    configs.forEach(function (config) {\n      if (!isSupportedTransformProp(config.property)) {\n        throw new Error(\"Property '\" + config.property + \"' is not supported by native animated module\");\n      }\n    });\n  }\n  function validateStyles(styles) {\n    for (var _key2 in styles) {\n      if (!isSupportedStyleProp(_key2)) {\n        throw new Error(\"Style property '\" + _key2 + \"' is not supported by native animated module\");\n      }\n    }\n  }\n  function validateInterpolation(config) {\n    for (var _key3 in config) {\n      if (!isSupportedInterpolationParam(_key3)) {\n        throw new Error(\"Interpolation property '\" + _key3 + \"' is not supported by native animated module\");\n      }\n    }\n  }\n  function generateNewNodeTag() {\n    return __nativeAnimatedNodeTagCount++;\n  }\n  function generateNewAnimationId() {\n    return __nativeAnimationIdCount++;\n  }\n  function assertNativeAnimatedModule() {\n    (0, _invariant.default)(NativeAnimatedModule, 'Native animated module is not available');\n  }\n  var _warnedMissingNativeAnimated = false;\n  function shouldUseNativeDriver(config) {\n    if (config.useNativeDriver == null) {\n      console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n    }\n    if (config.useNativeDriver === true && !NativeAnimatedModule) {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n        _warnedMissingNativeAnimated = true;\n      }\n      return false;\n    }\n    return config.useNativeDriver || false;\n  }\n  function transformDataType(value) {\n    // Change the string type to number type so we can reuse the same logic in\n    // iOS and Android platform\n    if (typeof value !== 'string') {\n      return value;\n    }\n    if (/deg$/.test(value)) {\n      var degrees = parseFloat(value) || 0;\n      var radians = degrees * Math.PI / 180.0;\n      return radians;\n    } else {\n      return value;\n    }\n  }\n  var _default = exports.default = {\n    API,\n    isSupportedColorStyleProp,\n    isSupportedStyleProp,\n    isSupportedTransformProp,\n    isSupportedInterpolationParam,\n    addWhitelistedStyleProp,\n    addWhitelistedTransformProp,\n    addWhitelistedInterpolationParam,\n    validateStyles,\n    validateTransform,\n    validateInterpolation,\n    generateNewNodeTag,\n    generateNewAnimationId,\n    assertNativeAnimatedModule,\n    shouldUseNativeDriver,\n    transformDataType,\n    // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppresion\n    // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppresion\n    get nativeEventEmitter() {\n      if (!nativeEventEmitter) {\n        nativeEventEmitter = new _NativeEventEmitter.default(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        _Platform.default.OS !== 'ios' ? null : NativeAnimatedModule);\n      }\n      return nativeEventEmitter;\n    }\n  };\n});","lineCount":484,"map":[[23,2,1,0],[23,6,1,0,"_objectSpread2"],[23,20,1,0],[23,23,1,0,"_interopRequireDefault"],[23,45,1,0],[23,46,1,0,"_$$_REQUIRE"],[23,57,1,0],[23,58,1,0,"_dependencyMap"],[23,72,1,0],[24,2,12,0],[24,6,12,0,"_NativeAnimatedModule"],[24,27,12,0],[24,30,12,0,"_interopRequireDefault"],[24,52,12,0],[24,53,12,0,"_$$_REQUIRE"],[24,64,12,0],[24,65,12,0,"_dependencyMap"],[24,79,12,0],[25,2,13,0],[25,6,13,0,"_NativeAnimatedTurboModule"],[25,32,13,0],[25,35,13,0,"_interopRequireDefault"],[25,57,13,0],[25,58,13,0,"_$$_REQUIRE"],[25,69,13,0],[25,70,13,0,"_dependencyMap"],[25,84,13,0],[26,2,14,0],[26,6,14,0,"_NativeEventEmitter"],[26,25,14,0],[26,28,14,0,"_interopRequireDefault"],[26,50,14,0],[26,51,14,0,"_$$_REQUIRE"],[26,62,14,0],[26,63,14,0,"_dependencyMap"],[26,77,14,0],[27,2,15,0],[27,6,15,0,"_Platform"],[27,15,15,0],[27,18,15,0,"_interopRequireDefault"],[27,40,15,0],[27,41,15,0,"_$$_REQUIRE"],[27,52,15,0],[27,53,15,0,"_dependencyMap"],[27,67,15,0],[28,2,16,0],[28,6,16,0,"_ReactNativeFeatureFlags"],[28,30,16,0],[28,33,16,0,"_interopRequireDefault"],[28,55,16,0],[28,56,16,0,"_$$_REQUIRE"],[28,67,16,0],[28,68,16,0,"_dependencyMap"],[28,82,16,0],[29,2,17,0],[29,6,17,0,"_invariant"],[29,16,17,0],[29,19,17,0,"_interopRequireDefault"],[29,41,17,0],[29,42,17,0,"_$$_REQUIRE"],[29,53,17,0],[29,54,17,0,"_dependencyMap"],[29,68,17,0],[30,2,18,0],[30,6,18,0,"_RCTDeviceEventEmitter"],[30,28,18,0],[30,31,18,0,"_interopRequireDefault"],[30,53,18,0],[30,54,18,0,"_$$_REQUIRE"],[30,65,18,0],[30,66,18,0,"_dependencyMap"],[30,80,18,0],[31,2,2,0],[32,0,3,0],[33,0,4,0],[34,0,5,0],[35,0,6,0],[36,0,7,0],[37,0,8,0],[38,0,9,0],[39,0,10,0],[41,2,19,0],[42,2,20,0],[42,6,20,4,"NativeAnimatedModule"],[42,26,20,24],[42,29,20,27,"Platform"],[42,46,20,35],[42,47,20,36,"OS"],[42,49,20,38],[42,54,20,43],[42,59,20,48],[42,63,20,52,"global"],[42,69,20,58],[42,70,20,59,"RN$Bridgeless"],[42,83,20,72],[42,88,20,77],[42,92,20,81],[42,95,20,84,"NativeAnimatedTurboModule"],[42,129,20,109],[42,132,20,112,"NativeAnimatedNonTurboModule"],[42,161,20,140],[43,2,21,0],[43,6,21,4,"__nativeAnimatedNodeTagCount"],[43,34,21,32],[43,37,21,35],[43,38,21,36],[43,39,21,37],[43,40,21,38],[44,2,22,0],[44,6,22,4,"__nativeAnimationIdCount"],[44,30,22,28],[44,33,22,31],[44,34,22,32],[44,35,22,33],[44,36,22,34],[46,2,24,0],[46,6,24,4,"nativeEventEmitter"],[46,24,24,22],[47,2,25,0],[47,6,25,4,"waitingForQueuedOperations"],[47,32,25,30],[47,35,25,33],[47,39,25,37,"Set"],[47,42,25,40],[47,43,25,41],[47,44,25,42],[48,2,26,0],[48,6,26,4,"queueOperations"],[48,21,26,19],[48,24,26,22],[48,29,26,27],[49,2,27,0],[49,6,27,4,"queue"],[49,11,27,9],[49,14,27,12],[49,16,27,14],[50,2,28,0],[51,2,29,0],[51,6,29,4,"singleOpQueue"],[51,19,29,17],[51,22,29,20],[51,24,29,22],[52,2,30,0],[52,6,30,4,"useSingleOpBatching"],[52,25,30,23],[52,28,30,26],[52,33,30,31],[53,2,31,0,"Platform"],[53,19,31,8],[53,20,31,9,"OS"],[53,22,31,11],[53,27,31,16],[53,36,31,25],[53,40,31,29],[53,41,31,30],[53,43,31,32,"NativeAnimatedModule"],[53,63,31,52],[53,67,31,56],[53,71,31,60],[53,75,31,64,"NativeAnimatedModule"],[53,95,31,84],[53,96,31,85,"queueAndExecuteBatchedOperations"],[53,128,31,117],[53,129,31,118],[53,133,31,122,"ReactNativeFeatureFlags"],[53,165,31,145],[53,166,31,146,"animatedShouldUseSingleOp"],[53,191,31,171],[53,192,31,172],[53,193,31,173],[54,2,32,0],[54,6,32,4,"flushQueueTimeout"],[54,23,32,21],[54,26,32,24],[54,30,32,28],[55,2,33,0],[55,6,33,4,"eventListenerGetValueCallbacks"],[55,36,33,34],[55,39,33,37],[55,40,33,38],[55,41,33,39],[56,2,34,0],[56,6,34,4,"eventListenerAnimationFinishedCallbacks"],[56,45,34,43],[56,48,34,46],[56,49,34,47],[56,50,34,48],[57,2,35,0],[57,6,35,4,"globalEventEmitterGetValueListener"],[57,40,35,38],[57,43,35,41],[57,47,35,45],[58,2,36,0],[58,6,36,4,"globalEventEmitterAnimationFinishedListener"],[58,49,36,47],[58,52,36,50],[58,56,36,54],[59,2,37,0],[59,6,37,4,"nativeOps"],[59,15,37,13],[59,18,37,16,"useSingleOpBatching"],[59,37,37,35],[59,40,37,38],[59,52,37,50],[60,4,38,2],[60,8,38,6,"apis"],[60,12,38,10],[60,15,38,13],[60,16,38,14],[60,36,38,34],[61,4,39,2],[62,4,40,2],[62,30,40,28],[63,4,41,2],[64,4,42,2],[64,14,42,12],[65,4,43,2],[66,4,44,2],[66,39,44,37],[67,4,45,2],[68,4,46,2],[68,38,46,36],[69,4,47,2],[70,4,48,2],[70,26,48,24],[71,4,49,2],[72,4,50,2],[72,29,50,27],[73,4,51,2],[74,4,52,2],[74,24,52,22],[75,4,53,2],[76,4,54,2],[76,19,54,17],[77,4,55,2],[78,4,56,2],[78,26,56,24],[79,4,57,2],[80,4,58,2],[80,27,58,25],[81,4,59,2],[82,4,60,2],[82,31,60,29],[83,4,61,2],[84,4,62,2],[84,31,62,29],[85,4,63,2],[86,4,64,2],[86,31,64,29],[87,4,65,2],[88,4,66,2],[88,36,66,34],[89,4,67,2],[90,4,68,2],[90,26,68,24],[91,4,69,2],[92,4,70,2],[92,22,70,20],[93,4,71,2],[94,4,72,2],[94,28,72,26],[95,4,73,2],[96,4,74,2],[96,33,74,31],[97,4,75,2],[98,4,76,2],[98,17,76,15],[99,4,77,2],[100,4,78,2],[100,20,78,18],[100,21,78,19],[101,4,78,19],[101,5,79,3],[102,4,80,2],[102,11,80,9,"apis"],[102,15,80,13],[102,16,80,14,"reduce"],[102,22,80,20],[102,23,80,21],[102,33,80,22,"acc"],[102,36,80,25],[102,38,80,27,"functionName"],[102,50,80,39],[102,52,80,41,"i"],[102,53,80,42],[102,55,80,47],[103,6,81,4],[104,6,82,4],[105,6,83,4,"acc"],[105,9,83,7],[105,10,83,8,"functionName"],[105,22,83,20],[105,23,83,21],[105,26,83,24,"i"],[105,27,83,25],[105,30,83,28],[105,31,83,29],[106,6,84,4],[106,13,84,11,"acc"],[106,16,84,14],[107,4,85,2],[107,5,85,3],[107,7,85,5],[107,8,85,6],[107,9,85,7],[107,10,85,8],[108,2,86,0],[108,3,86,1],[108,4,86,2],[108,5,86,3],[108,8,86,6,"NativeAnimatedModule"],[108,28,86,26],[110,2,88,0],[111,0,89,0],[112,0,90,0],[113,0,91,0],[114,2,92,0],[114,6,92,4,"API"],[114,9,92,7],[114,12,92,7,"exports"],[114,19,92,7],[114,20,92,7,"API"],[114,23,92,7],[114,26,92,10],[115,4,93,2,"getValue"],[115,12,93,10],[115,14,93,12],[115,23,93,21,"getValue"],[115,31,93,29,"getValue"],[115,32,93,30,"tag"],[115,35,93,33],[115,37,93,35,"saveValueCallback"],[115,54,93,52],[115,56,93,54],[116,6,94,4],[116,10,94,4,"invariant"],[116,28,94,13],[116,30,94,14,"nativeOps"],[116,39,94,23],[116,41,94,25],[116,82,94,66],[116,83,94,67],[117,6,95,4],[117,10,95,8,"useSingleOpBatching"],[117,29,95,27],[117,31,95,29],[118,8,96,6],[118,12,96,10,"saveValueCallback"],[118,29,96,27],[118,31,96,29],[119,10,97,8,"eventListenerGetValueCallbacks"],[119,40,97,38],[119,41,97,39,"tag"],[119,44,97,42],[119,45,97,43],[119,48,97,46,"saveValueCallback"],[119,65,97,63],[120,8,98,6],[121,8,99,6],[122,8,100,6,"API"],[122,11,100,9],[122,12,100,10,"queueOperation"],[122,26,100,24],[122,27,100,25,"nativeOps"],[122,36,100,34],[122,37,100,35,"getValue"],[122,45,100,43],[122,47,100,45,"tag"],[122,50,100,48],[122,51,100,49],[123,6,101,4],[123,7,101,5],[123,13,101,11],[124,8,102,6,"API"],[124,11,102,9],[124,12,102,10,"queueOperation"],[124,26,102,24],[124,27,102,25,"nativeOps"],[124,36,102,34],[124,37,102,35,"getValue"],[124,45,102,43],[124,47,102,45,"tag"],[124,50,102,48],[124,52,102,50,"saveValueCallback"],[124,69,102,67],[124,70,102,68],[125,6,103,4],[126,4,104,2],[126,5,104,3],[127,4,105,2,"setWaitingForIdentifier"],[127,27,105,25],[127,29,105,27],[127,38,105,36,"setWaitingForIdentifier"],[127,61,105,59,"setWaitingForIdentifier"],[127,62,105,60,"id"],[127,64,105,62],[127,66,105,64],[128,6,106,4,"waitingForQueuedOperations"],[128,32,106,30],[128,33,106,31,"add"],[128,36,106,34],[128,37,106,35,"id"],[128,39,106,37],[128,40,106,38],[129,6,107,4,"queueOperations"],[129,21,107,19],[129,24,107,22],[129,28,107,26],[130,6,108,4],[130,10,108,8,"ReactNativeFeatureFlags"],[130,42,108,31],[130,43,108,32,"animatedShouldDebounceQueueFlush"],[130,75,108,64],[130,76,108,65],[130,77,108,66],[130,81,108,70,"flushQueueTimeout"],[130,98,108,87],[130,100,108,89],[131,8,109,6,"clearTimeout"],[131,20,109,18],[131,21,109,19,"flushQueueTimeout"],[131,38,109,36],[131,39,109,37],[132,6,110,4],[133,4,111,2],[133,5,111,3],[134,4,112,2,"unsetWaitingForIdentifier"],[134,29,112,27],[134,31,112,29],[134,40,112,38,"unsetWaitingForIdentifier"],[134,65,112,63,"unsetWaitingForIdentifier"],[134,66,112,64,"id"],[134,68,112,66],[134,70,112,68],[135,6,113,4,"waitingForQueuedOperations"],[135,32,113,30],[135,33,113,31,"delete"],[135,39,113,37],[135,40,113,38,"id"],[135,42,113,40],[135,43,113,41],[136,6,114,4],[136,10,114,8,"waitingForQueuedOperations"],[136,36,114,34],[136,37,114,35,"size"],[136,41,114,39],[136,46,114,44],[136,47,114,45],[136,49,114,47],[137,8,115,6,"queueOperations"],[137,23,115,21],[137,26,115,24],[137,31,115,29],[138,8,116,6,"API"],[138,11,116,9],[138,12,116,10,"disableQueue"],[138,24,116,22],[138,25,116,23],[138,26,116,24],[139,6,117,4],[140,4,118,2],[140,5,118,3],[141,4,119,2,"disableQueue"],[141,16,119,14],[141,18,119,16],[141,27,119,25,"disableQueue"],[141,39,119,37,"disableQueue"],[141,40,119,37],[141,42,119,40],[142,6,120,4],[142,10,120,4,"invariant"],[142,28,120,13],[142,30,120,14,"nativeOps"],[142,39,120,23],[142,41,120,25],[142,82,120,66],[142,83,120,67],[143,6,121,4],[143,10,121,8,"ReactNativeFeatureFlags"],[143,42,121,31],[143,43,121,32,"animatedShouldDebounceQueueFlush"],[143,75,121,64],[143,76,121,65],[143,77,121,66],[143,79,121,68],[144,8,122,6],[144,12,122,10,"prevTimeout"],[144,23,122,21],[144,26,122,24,"flushQueueTimeout"],[144,43,122,41],[145,8,123,6,"clearImmediate"],[145,22,123,20],[145,23,123,21,"prevTimeout"],[145,34,123,32],[145,35,123,33],[146,8,124,6,"flushQueueTimeout"],[146,25,124,23],[146,28,124,26,"setImmediate"],[146,40,124,38],[146,41,124,39,"API"],[146,44,124,42],[146,45,124,43,"flushQueue"],[146,55,124,53],[146,56,124,54],[147,6,125,4],[147,7,125,5],[147,13,125,11],[148,8,126,6,"API"],[148,11,126,9],[148,12,126,10,"flushQueue"],[148,22,126,20],[148,23,126,21],[148,24,126,22],[149,6,127,4],[150,4,128,2],[150,5,128,3],[151,4,129,2,"flushQueue"],[151,14,129,12],[151,16,129,14],[151,25,129,23,"flushQueue"],[151,35,129,33,"flushQueue"],[151,36,129,33],[151,38,129,36],[152,6,130,4],[153,0,131,0],[154,0,132,0],[155,0,133,0],[156,0,134,0],[157,0,135,0],[158,0,136,0],[159,0,137,0],[160,0,138,0],[161,0,139,0],[162,0,140,0],[163,0,141,0],[164,0,142,0],[165,0,143,0],[166,0,144,0],[167,0,145,0],[168,0,146,0],[169,0,147,0],[170,0,148,0],[171,0,149,0],[172,0,150,0],[173,0,151,0],[174,0,152,0],[175,0,153,0],[176,0,154,0],[177,0,155,0],[178,0,156,0],[179,0,157,0],[180,0,158,0],[181,0,159,0],[182,0,160,0],[183,0,161,0],[184,0,162,0],[185,0,163,0],[186,4,130,4],[186,5,164,3],[187,4,165,2,"queueOperation"],[187,18,165,16],[187,20,165,18],[187,29,165,27,"queueOperation"],[187,43,165,41,"queueOperation"],[187,44,165,42,"fn"],[187,46,165,44],[187,48,165,46],[188,6,166,4],[188,11,166,9],[188,15,166,13,"_len"],[188,19,166,17],[188,22,166,20,"arguments"],[188,31,166,29],[188,32,166,30,"length"],[188,38,166,36],[188,40,166,38,"args"],[188,44,166,42],[188,47,166,45],[188,51,166,49,"Array"],[188,56,166,54],[188,57,166,55,"_len"],[188,61,166,59],[188,64,166,62],[188,65,166,63],[188,68,166,66,"_len"],[188,72,166,70],[188,75,166,73],[188,76,166,74],[188,79,166,77],[188,80,166,78],[188,81,166,79],[188,83,166,81,"_key"],[188,87,166,85],[188,90,166,88],[188,91,166,89],[188,93,166,91,"_key"],[188,97,166,95],[188,100,166,98,"_len"],[188,104,166,102],[188,106,166,104,"_key"],[188,110,166,108],[188,112,166,110],[188,114,166,112],[189,8,167,6,"args"],[189,12,167,10],[189,13,167,11,"_key"],[189,17,167,15],[189,20,167,18],[189,21,167,19],[189,22,167,20],[189,25,167,23,"arguments"],[189,34,167,32],[189,35,167,33,"_key"],[189,39,167,37],[189,40,167,38],[190,6,168,4],[191,6,169,4],[191,10,169,8,"useSingleOpBatching"],[191,29,169,27],[191,31,169,29],[192,8,170,6],[193,8,171,6],[194,8,172,6,"singleOpQueue"],[194,21,172,19],[194,22,172,20,"push"],[194,26,172,24],[194,27,172,25,"fn"],[194,29,172,27],[194,31,172,29],[194,34,172,32,"args"],[194,38,172,36],[194,39,172,37],[195,8,173,6],[196,6,174,4],[198,6,176,4],[199,6,177,4],[200,6,178,4],[201,6,179,4],[201,10,179,8,"queueOperations"],[201,25,179,23],[201,29,179,27,"queue"],[201,34,179,32],[201,35,179,33,"length"],[201,41,179,39],[201,46,179,44],[201,47,179,45],[201,49,179,47],[202,8,180,6,"queue"],[202,13,180,11],[202,14,180,12,"push"],[202,18,180,16],[202,19,180,17],[203,10,180,17],[203,17,180,23,"fn"],[203,19,180,25],[203,20,180,26],[203,23,180,29,"args"],[203,27,180,33],[203,28,180,34],[204,8,180,34],[204,10,180,35],[205,6,181,4],[205,7,181,5],[205,13,181,11],[206,8,182,6,"fn"],[206,10,182,8],[206,11,182,9],[206,14,182,12,"args"],[206,18,182,16],[206,19,182,17],[207,6,183,4],[208,4,184,2],[208,5,184,3],[209,4,185,2,"createAnimatedNode"],[209,22,185,20],[209,24,185,22],[209,33,185,31,"createAnimatedNode"],[209,51,185,49,"createAnimatedNode"],[209,52,185,50,"tag"],[209,55,185,53],[209,57,185,55,"config"],[209,63,185,61],[209,65,185,63],[210,6,186,4],[210,10,186,4,"invariant"],[210,28,186,13],[210,30,186,14,"nativeOps"],[210,39,186,23],[210,41,186,25],[210,82,186,66],[210,83,186,67],[211,6,187,4,"API"],[211,9,187,7],[211,10,187,8,"queueOperation"],[211,24,187,22],[211,25,187,23,"nativeOps"],[211,34,187,32],[211,35,187,33,"createAnimatedNode"],[211,53,187,51],[211,55,187,53,"tag"],[211,58,187,56],[211,60,187,58,"config"],[211,66,187,64],[211,67,187,65],[212,4,188,2],[212,5,188,3],[213,4,189,2,"updateAnimatedNodeConfig"],[213,28,189,26],[213,30,189,28],[213,39,189,37,"updateAnimatedNodeConfig"],[213,63,189,61,"updateAnimatedNodeConfig"],[213,64,189,62,"tag"],[213,67,189,65],[213,69,189,67,"config"],[213,75,189,73],[213,77,189,75],[214,6,190,4],[214,10,190,4,"invariant"],[214,28,190,13],[214,30,190,14,"nativeOps"],[214,39,190,23],[214,41,190,25],[214,82,190,66],[214,83,190,67],[215,6,191,4],[216,6,192,4],[217,6,193,4],[218,4,194,2],[218,5,194,3],[219,4,195,2,"startListeningToAnimatedNodeValue"],[219,37,195,35],[219,39,195,37],[219,48,195,46,"startListeningToAnimatedNodeValue"],[219,81,195,79,"startListeningToAnimatedNodeValue"],[219,82,195,80,"tag"],[219,85,195,83],[219,87,195,85],[220,6,196,4],[220,10,196,4,"invariant"],[220,28,196,13],[220,30,196,14,"nativeOps"],[220,39,196,23],[220,41,196,25],[220,82,196,66],[220,83,196,67],[221,6,197,4,"API"],[221,9,197,7],[221,10,197,8,"queueOperation"],[221,24,197,22],[221,25,197,23,"nativeOps"],[221,34,197,32],[221,35,197,33,"startListeningToAnimatedNodeValue"],[221,68,197,66],[221,70,197,68,"tag"],[221,73,197,71],[221,74,197,72],[222,4,198,2],[222,5,198,3],[223,4,199,2,"stopListeningToAnimatedNodeValue"],[223,36,199,34],[223,38,199,36],[223,47,199,45,"stopListeningToAnimatedNodeValue"],[223,79,199,77,"stopListeningToAnimatedNodeValue"],[223,80,199,78,"tag"],[223,83,199,81],[223,85,199,83],[224,6,200,4],[224,10,200,4,"invariant"],[224,28,200,13],[224,30,200,14,"nativeOps"],[224,39,200,23],[224,41,200,25],[224,82,200,66],[224,83,200,67],[225,6,201,4,"API"],[225,9,201,7],[225,10,201,8,"queueOperation"],[225,24,201,22],[225,25,201,23,"nativeOps"],[225,34,201,32],[225,35,201,33,"stopListeningToAnimatedNodeValue"],[225,67,201,65],[225,69,201,67,"tag"],[225,72,201,70],[225,73,201,71],[226,4,202,2],[226,5,202,3],[227,4,203,2,"connectAnimatedNodes"],[227,24,203,22],[227,26,203,24],[227,35,203,33,"connectAnimatedNodes"],[227,55,203,53,"connectAnimatedNodes"],[227,56,203,54,"parentTag"],[227,65,203,63],[227,67,203,65,"childTag"],[227,75,203,73],[227,77,203,75],[228,6,204,4],[228,10,204,4,"invariant"],[228,28,204,13],[228,30,204,14,"nativeOps"],[228,39,204,23],[228,41,204,25],[228,82,204,66],[228,83,204,67],[229,6,205,4,"API"],[229,9,205,7],[229,10,205,8,"queueOperation"],[229,24,205,22],[229,25,205,23,"nativeOps"],[229,34,205,32],[229,35,205,33,"connectAnimatedNodes"],[229,55,205,53],[229,57,205,55,"parentTag"],[229,66,205,64],[229,68,205,66,"childTag"],[229,76,205,74],[229,77,205,75],[230,4,206,2],[230,5,206,3],[231,4,207,2,"disconnectAnimatedNodes"],[231,27,207,25],[231,29,207,27],[231,38,207,36,"disconnectAnimatedNodes"],[231,61,207,59,"disconnectAnimatedNodes"],[231,62,207,60,"parentTag"],[231,71,207,69],[231,73,207,71,"childTag"],[231,81,207,79],[231,83,207,81],[232,6,208,4],[232,10,208,4,"invariant"],[232,28,208,13],[232,30,208,14,"nativeOps"],[232,39,208,23],[232,41,208,25],[232,82,208,66],[232,83,208,67],[233,6,209,4,"API"],[233,9,209,7],[233,10,209,8,"queueOperation"],[233,24,209,22],[233,25,209,23,"nativeOps"],[233,34,209,32],[233,35,209,33,"disconnectAnimatedNodes"],[233,58,209,56],[233,60,209,58,"parentTag"],[233,69,209,67],[233,71,209,69,"childTag"],[233,79,209,77],[233,80,209,78],[234,4,210,2],[234,5,210,3],[235,4,211,2,"startAnimatingNode"],[235,22,211,20],[235,24,211,22],[235,33,211,31,"startAnimatingNode"],[235,51,211,49,"startAnimatingNode"],[235,52,211,50,"animationId"],[235,63,211,61],[235,65,211,63,"nodeTag"],[235,72,211,70],[235,74,211,72,"config"],[235,80,211,78],[235,82,211,80,"endCallback"],[235,93,211,91],[235,95,211,93],[236,6,212,4],[236,10,212,4,"invariant"],[236,28,212,13],[236,30,212,14,"nativeOps"],[236,39,212,23],[236,41,212,25],[236,82,212,66],[236,83,212,67],[237,6,213,4],[237,10,213,8,"useSingleOpBatching"],[237,29,213,27],[237,31,213,29],[238,8,214,6],[238,12,214,10,"endCallback"],[238,23,214,21],[238,25,214,23],[239,10,215,8,"eventListenerAnimationFinishedCallbacks"],[239,49,215,47],[239,50,215,48,"animationId"],[239,61,215,59],[239,62,215,60],[239,65,215,63,"endCallback"],[239,76,215,74],[240,8,216,6],[241,8,217,6],[242,8,218,6,"API"],[242,11,218,9],[242,12,218,10,"queueOperation"],[242,26,218,24],[242,27,218,25,"nativeOps"],[242,36,218,34],[242,37,218,35,"startAnimatingNode"],[242,55,218,53],[242,57,218,55,"animationId"],[242,68,218,66],[242,70,218,68,"nodeTag"],[242,77,218,75],[242,79,218,77,"config"],[242,85,218,83],[242,86,218,84],[243,6,219,4],[243,7,219,5],[243,13,219,11],[244,8,220,6,"API"],[244,11,220,9],[244,12,220,10,"queueOperation"],[244,26,220,24],[244,27,220,25,"nativeOps"],[244,36,220,34],[244,37,220,35,"startAnimatingNode"],[244,55,220,53],[244,57,220,55,"animationId"],[244,68,220,66],[244,70,220,68,"nodeTag"],[244,77,220,75],[244,79,220,77,"config"],[244,85,220,83],[244,87,220,85,"endCallback"],[244,98,220,96],[244,99,220,97],[245,6,221,4],[246,4,222,2],[246,5,222,3],[247,4,223,2,"stopAnimation"],[247,17,223,15],[247,19,223,17],[247,28,223,26,"stopAnimation"],[247,41,223,39,"stopAnimation"],[247,42,223,40,"animationId"],[247,53,223,51],[247,55,223,53],[248,6,224,4],[248,10,224,4,"invariant"],[248,28,224,13],[248,30,224,14,"nativeOps"],[248,39,224,23],[248,41,224,25],[248,82,224,66],[248,83,224,67],[249,6,225,4,"API"],[249,9,225,7],[249,10,225,8,"queueOperation"],[249,24,225,22],[249,25,225,23,"nativeOps"],[249,34,225,32],[249,35,225,33,"stopAnimation"],[249,48,225,46],[249,50,225,48,"animationId"],[249,61,225,59],[249,62,225,60],[250,4,226,2],[250,5,226,3],[251,4,227,2,"setAnimatedNodeValue"],[251,24,227,22],[251,26,227,24],[251,35,227,33,"setAnimatedNodeValue"],[251,55,227,53,"setAnimatedNodeValue"],[251,56,227,54,"nodeTag"],[251,63,227,61],[251,65,227,63,"value"],[251,70,227,68],[251,72,227,70],[252,6,228,4],[252,10,228,4,"invariant"],[252,28,228,13],[252,30,228,14,"nativeOps"],[252,39,228,23],[252,41,228,25],[252,82,228,66],[252,83,228,67],[253,6,229,4,"API"],[253,9,229,7],[253,10,229,8,"queueOperation"],[253,24,229,22],[253,25,229,23,"nativeOps"],[253,34,229,32],[253,35,229,33,"setAnimatedNodeValue"],[253,55,229,53],[253,57,229,55,"nodeTag"],[253,64,229,62],[253,66,229,64,"value"],[253,71,229,69],[253,72,229,70],[254,4,230,2],[254,5,230,3],[255,4,231,2,"setAnimatedNodeOffset"],[255,25,231,23],[255,27,231,25],[255,36,231,34,"setAnimatedNodeOffset"],[255,57,231,55,"setAnimatedNodeOffset"],[255,58,231,56,"nodeTag"],[255,65,231,63],[255,67,231,65,"offset"],[255,73,231,71],[255,75,231,73],[256,6,232,4],[256,10,232,4,"invariant"],[256,28,232,13],[256,30,232,14,"nativeOps"],[256,39,232,23],[256,41,232,25],[256,82,232,66],[256,83,232,67],[257,6,233,4,"API"],[257,9,233,7],[257,10,233,8,"queueOperation"],[257,24,233,22],[257,25,233,23,"nativeOps"],[257,34,233,32],[257,35,233,33,"setAnimatedNodeOffset"],[257,56,233,54],[257,58,233,56,"nodeTag"],[257,65,233,63],[257,67,233,65,"offset"],[257,73,233,71],[257,74,233,72],[258,4,234,2],[258,5,234,3],[259,4,235,2,"flattenAnimatedNodeOffset"],[259,29,235,27],[259,31,235,29],[259,40,235,38,"flattenAnimatedNodeOffset"],[259,65,235,63,"flattenAnimatedNodeOffset"],[259,66,235,64,"nodeTag"],[259,73,235,71],[259,75,235,73],[260,6,236,4],[260,10,236,4,"invariant"],[260,28,236,13],[260,30,236,14,"nativeOps"],[260,39,236,23],[260,41,236,25],[260,82,236,66],[260,83,236,67],[261,6,237,4,"API"],[261,9,237,7],[261,10,237,8,"queueOperation"],[261,24,237,22],[261,25,237,23,"nativeOps"],[261,34,237,32],[261,35,237,33,"flattenAnimatedNodeOffset"],[261,60,237,58],[261,62,237,60,"nodeTag"],[261,69,237,67],[261,70,237,68],[262,4,238,2],[262,5,238,3],[263,4,239,2,"extractAnimatedNodeOffset"],[263,29,239,27],[263,31,239,29],[263,40,239,38,"extractAnimatedNodeOffset"],[263,65,239,63,"extractAnimatedNodeOffset"],[263,66,239,64,"nodeTag"],[263,73,239,71],[263,75,239,73],[264,6,240,4],[264,10,240,4,"invariant"],[264,28,240,13],[264,30,240,14,"nativeOps"],[264,39,240,23],[264,41,240,25],[264,82,240,66],[264,83,240,67],[265,6,241,4,"API"],[265,9,241,7],[265,10,241,8,"queueOperation"],[265,24,241,22],[265,25,241,23,"nativeOps"],[265,34,241,32],[265,35,241,33,"extractAnimatedNodeOffset"],[265,60,241,58],[265,62,241,60,"nodeTag"],[265,69,241,67],[265,70,241,68],[266,4,242,2],[266,5,242,3],[267,4,243,2,"connectAnimatedNodeToView"],[267,29,243,27],[267,31,243,29],[267,40,243,38,"connectAnimatedNodeToView"],[267,65,243,63,"connectAnimatedNodeToView"],[267,66,243,64,"nodeTag"],[267,73,243,71],[267,75,243,73,"viewTag"],[267,82,243,80],[267,84,243,82],[268,6,244,4],[268,10,244,4,"invariant"],[268,28,244,13],[268,30,244,14,"nativeOps"],[268,39,244,23],[268,41,244,25],[268,82,244,66],[268,83,244,67],[269,6,245,4,"API"],[269,9,245,7],[269,10,245,8,"queueOperation"],[269,24,245,22],[269,25,245,23,"nativeOps"],[269,34,245,32],[269,35,245,33,"connectAnimatedNodeToView"],[269,60,245,58],[269,62,245,60,"nodeTag"],[269,69,245,67],[269,71,245,69,"viewTag"],[269,78,245,76],[269,79,245,77],[270,4,246,2],[270,5,246,3],[271,4,247,2,"disconnectAnimatedNodeFromView"],[271,34,247,32],[271,36,247,34],[271,45,247,43,"disconnectAnimatedNodeFromView"],[271,75,247,73,"disconnectAnimatedNodeFromView"],[271,76,247,74,"nodeTag"],[271,83,247,81],[271,85,247,83,"viewTag"],[271,92,247,90],[271,94,247,92],[272,6,248,4],[272,10,248,4,"invariant"],[272,28,248,13],[272,30,248,14,"nativeOps"],[272,39,248,23],[272,41,248,25],[272,82,248,66],[272,83,248,67],[273,6,249,4,"API"],[273,9,249,7],[273,10,249,8,"queueOperation"],[273,24,249,22],[273,25,249,23,"nativeOps"],[273,34,249,32],[273,35,249,33,"disconnectAnimatedNodeFromView"],[273,65,249,63],[273,67,249,65,"nodeTag"],[273,74,249,72],[273,76,249,74,"viewTag"],[273,83,249,81],[273,84,249,82],[274,4,250,2],[274,5,250,3],[275,4,251,2,"restoreDefaultValues"],[275,24,251,22],[275,26,251,24],[275,35,251,33,"restoreDefaultValues"],[275,55,251,53,"restoreDefaultValues"],[275,56,251,54,"nodeTag"],[275,63,251,61],[275,65,251,63],[276,6,252,4],[276,10,252,4,"invariant"],[276,28,252,13],[276,30,252,14,"nativeOps"],[276,39,252,23],[276,41,252,25],[276,82,252,66],[276,83,252,67],[277,6,253,4],[278,6,254,4],[278,10,254,8,"nativeOps"],[278,19,254,17],[278,20,254,18,"restoreDefaultValues"],[278,40,254,38],[278,44,254,42],[278,48,254,46],[278,50,254,48],[279,8,255,6,"API"],[279,11,255,9],[279,12,255,10,"queueOperation"],[279,26,255,24],[279,27,255,25,"nativeOps"],[279,36,255,34],[279,37,255,35,"restoreDefaultValues"],[279,57,255,55],[279,59,255,57,"nodeTag"],[279,66,255,64],[279,67,255,65],[280,6,256,4],[281,4,257,2],[281,5,257,3],[282,4,258,2,"dropAnimatedNode"],[282,20,258,18],[282,22,258,20],[282,31,258,29,"dropAnimatedNode"],[282,47,258,45,"dropAnimatedNode"],[282,48,258,46,"tag"],[282,51,258,49],[282,53,258,51],[283,6,259,4],[283,10,259,4,"invariant"],[283,28,259,13],[283,30,259,14,"nativeOps"],[283,39,259,23],[283,41,259,25],[283,82,259,66],[283,83,259,67],[284,6,260,4,"API"],[284,9,260,7],[284,10,260,8,"queueOperation"],[284,24,260,22],[284,25,260,23,"nativeOps"],[284,34,260,32],[284,35,260,33,"dropAnimatedNode"],[284,51,260,49],[284,53,260,51,"tag"],[284,56,260,54],[284,57,260,55],[285,4,261,2],[285,5,261,3],[286,4,262,2,"addAnimatedEventToView"],[286,26,262,24],[286,28,262,26],[286,37,262,35,"addAnimatedEventToView"],[286,59,262,57,"addAnimatedEventToView"],[286,60,262,58,"viewTag"],[286,67,262,65],[286,69,262,67,"eventName"],[286,78,262,76],[286,80,262,78,"eventMapping"],[286,92,262,90],[286,94,262,92],[287,6,263,4],[287,10,263,4,"invariant"],[287,28,263,13],[287,30,263,14,"nativeOps"],[287,39,263,23],[287,41,263,25],[287,82,263,66],[287,83,263,67],[288,6,264,4,"API"],[288,9,264,7],[288,10,264,8,"queueOperation"],[288,24,264,22],[288,25,264,23,"nativeOps"],[288,34,264,32],[288,35,264,33,"addAnimatedEventToView"],[288,57,264,55],[288,59,264,57,"viewTag"],[288,66,264,64],[288,68,264,66,"eventName"],[288,77,264,75],[288,79,264,77,"eventMapping"],[288,91,264,89],[288,92,264,90],[289,4,265,2],[289,5,265,3],[290,4,266,2,"removeAnimatedEventFromView"],[290,31,266,29,"removeAnimatedEventFromView"],[290,32,266,30,"viewTag"],[290,39,266,37],[290,41,266,39,"eventName"],[290,50,266,48],[290,52,266,50,"animatedNodeTag"],[290,67,266,65],[290,69,266,67],[291,6,267,4],[291,10,267,4,"invariant"],[291,28,267,13],[291,30,267,14,"nativeOps"],[291,39,267,23],[291,41,267,25],[291,82,267,66],[291,83,267,67],[292,6,268,4,"API"],[292,9,268,7],[292,10,268,8,"queueOperation"],[292,24,268,22],[292,25,268,23,"nativeOps"],[292,34,268,32],[292,35,268,33,"removeAnimatedEventFromView"],[292,62,268,60],[292,64,268,62,"viewTag"],[292,71,268,69],[292,73,268,71,"eventName"],[292,82,268,80],[292,84,268,82,"animatedNodeTag"],[292,99,268,97],[292,100,268,98],[293,4,269,2],[294,2,270,0],[294,3,270,1],[295,2,271,0],[295,11,271,9,"setupGlobalEventEmitterListeners"],[295,43,271,41,"setupGlobalEventEmitterListeners"],[295,44,271,41],[295,46,271,44],[296,4,272,2,"globalEventEmitterGetValueListener"],[296,38,272,36],[296,41,272,39,"RCTDeviceEventEmitter"],[296,71,272,60],[296,72,272,61,"addListener"],[296,83,272,72],[296,84,272,73],[296,116,272,105],[296,118,272,107],[296,128,272,117,"params"],[296,134,272,123],[296,136,272,125],[297,6,273,4],[297,10,273,8,"tag"],[297,13,273,11],[297,16,273,14,"params"],[297,22,273,20],[297,23,273,21,"tag"],[297,26,273,24],[298,6,274,4],[298,10,274,8,"callback"],[298,18,274,16],[298,21,274,19,"eventListenerGetValueCallbacks"],[298,51,274,49],[298,52,274,50,"tag"],[298,55,274,53],[298,56,274,54],[299,6,275,4],[299,10,275,8],[299,11,275,9,"callback"],[299,19,275,17],[299,21,275,19],[300,8,276,6],[301,6,277,4],[302,6,278,4,"callback"],[302,14,278,12],[302,15,278,13,"params"],[302,21,278,19],[302,22,278,20,"value"],[302,27,278,25],[302,28,278,26],[303,6,279,4],[303,13,279,11,"eventListenerGetValueCallbacks"],[303,43,279,41],[303,44,279,42,"tag"],[303,47,279,45],[303,48,279,46],[304,4,280,2],[304,5,280,3],[304,6,280,4],[305,4,281,2,"globalEventEmitterAnimationFinishedListener"],[305,47,281,45],[305,50,281,48,"RCTDeviceEventEmitter"],[305,80,281,69],[305,81,281,70,"addListener"],[305,92,281,81],[305,93,281,82],[305,134,281,123],[305,136,281,125],[305,146,281,135,"params"],[305,152,281,141],[305,154,281,143],[306,6,282,4],[306,10,282,8,"animationId"],[306,21,282,19],[306,24,282,22,"params"],[306,30,282,28],[306,31,282,29,"animationId"],[306,42,282,40],[307,6,283,4],[307,10,283,8,"callback"],[307,18,283,16],[307,21,283,19,"eventListenerAnimationFinishedCallbacks"],[307,60,283,58],[307,61,283,59,"animationId"],[307,72,283,70],[307,73,283,71],[308,6,284,4],[308,10,284,8],[308,11,284,9,"callback"],[308,19,284,17],[308,21,284,19],[309,8,285,6],[310,6,286,4],[311,6,287,4,"callback"],[311,14,287,12],[311,15,287,13,"params"],[311,21,287,19],[311,22,287,20],[312,6,288,4],[312,13,288,11,"eventListenerAnimationFinishedCallbacks"],[312,52,288,50],[312,53,288,51,"animationId"],[312,64,288,62],[312,65,288,63],[313,4,289,2],[313,5,289,3],[313,6,289,4],[314,2,290,0],[316,2,292,0],[317,0,293,0],[318,0,294,0],[319,0,295,0],[320,0,296,0],[321,0,297,0],[322,2,298,0],[322,6,298,4,"SUPPORTED_COLOR_STYLES"],[322,28,298,26],[322,31,298,29],[323,4,299,2,"backgroundColor"],[323,19,299,17],[323,21,299,19],[323,25,299,23],[324,4,300,2,"borderBottomColor"],[324,21,300,19],[324,23,300,21],[324,27,300,25],[325,4,301,2,"borderColor"],[325,15,301,13],[325,17,301,15],[325,21,301,19],[326,4,302,2,"borderEndColor"],[326,18,302,16],[326,20,302,18],[326,24,302,22],[327,4,303,2,"borderLeftColor"],[327,19,303,17],[327,21,303,19],[327,25,303,23],[328,4,304,2,"borderRightColor"],[328,20,304,18],[328,22,304,20],[328,26,304,24],[329,4,305,2,"borderStartColor"],[329,20,305,18],[329,22,305,20],[329,26,305,24],[330,4,306,2,"borderTopColor"],[330,18,306,16],[330,20,306,18],[330,24,306,22],[331,4,307,2,"color"],[331,9,307,7],[331,11,307,9],[331,15,307,13],[332,4,308,2,"tintColor"],[332,13,308,11],[332,15,308,13],[333,2,309,0],[333,3,309,1],[334,2,310,0],[334,6,310,4,"SUPPORTED_STYLES"],[334,22,310,20],[334,25,310,23],[334,29,310,23,"_objectSpread"],[334,51,310,36],[334,53,310,37],[334,57,310,37,"_objectSpread"],[334,79,310,50],[334,81,310,51],[334,82,310,52],[334,83,310,53],[334,85,310,55,"SUPPORTED_COLOR_STYLES"],[334,107,310,77],[334,108,310,78],[334,110,310,80],[334,111,310,81],[334,112,310,82],[334,114,310,84],[335,4,311,2,"borderBottomEndRadius"],[335,25,311,23],[335,27,311,25],[335,31,311,29],[336,4,312,2,"borderBottomLeftRadius"],[336,26,312,24],[336,28,312,26],[336,32,312,30],[337,4,313,2,"borderBottomRightRadius"],[337,27,313,25],[337,29,313,27],[337,33,313,31],[338,4,314,2,"borderBottomStartRadius"],[338,27,314,25],[338,29,314,27],[338,33,314,31],[339,4,315,2,"borderRadius"],[339,16,315,14],[339,18,315,16],[339,22,315,20],[340,4,316,2,"borderTopEndRadius"],[340,22,316,20],[340,24,316,22],[340,28,316,26],[341,4,317,2,"borderTopLeftRadius"],[341,23,317,21],[341,25,317,23],[341,29,317,27],[342,4,318,2,"borderTopRightRadius"],[342,24,318,22],[342,26,318,24],[342,30,318,28],[343,4,319,2,"borderTopStartRadius"],[343,24,319,22],[343,26,319,24],[343,30,319,28],[344,4,320,2,"elevation"],[344,13,320,11],[344,15,320,13],[344,19,320,17],[345,4,321,2,"opacity"],[345,11,321,9],[345,13,321,11],[345,17,321,15],[346,4,322,2,"transform"],[346,13,322,11],[346,15,322,13],[346,19,322,17],[347,4,323,2,"zIndex"],[347,10,323,8],[347,12,323,10],[347,16,323,14],[348,4,324,2],[349,4,325,2,"shadowOpacity"],[349,17,325,15],[349,19,325,17],[349,23,325,21],[350,4,326,2,"shadowRadius"],[350,16,326,14],[350,18,326,16],[350,22,326,20],[351,4,327,2],[352,4,328,2,"scaleX"],[352,10,328,8],[352,12,328,10],[352,16,328,14],[353,4,329,2,"scaleY"],[353,10,329,8],[353,12,329,10],[353,16,329,14],[354,4,330,2,"translateX"],[354,14,330,12],[354,16,330,14],[354,20,330,18],[355,4,331,2,"translateY"],[355,14,331,12],[355,16,331,14],[356,2,332,0],[356,3,332,1],[356,4,332,2],[357,2,333,0],[357,6,333,4,"SUPPORTED_TRANSFORMS"],[357,26,333,24],[357,29,333,27],[358,4,334,2,"translateX"],[358,14,334,12],[358,16,334,14],[358,20,334,18],[359,4,335,2,"translateY"],[359,14,335,12],[359,16,335,14],[359,20,335,18],[360,4,336,2,"scale"],[360,9,336,7],[360,11,336,9],[360,15,336,13],[361,4,337,2,"scaleX"],[361,10,337,8],[361,12,337,10],[361,16,337,14],[362,4,338,2,"scaleY"],[362,10,338,8],[362,12,338,10],[362,16,338,14],[363,4,339,2,"rotate"],[363,10,339,8],[363,12,339,10],[363,16,339,14],[364,4,340,2,"rotateX"],[364,11,340,9],[364,13,340,11],[364,17,340,15],[365,4,341,2,"rotateY"],[365,11,341,9],[365,13,341,11],[365,17,341,15],[366,4,342,2,"rotateZ"],[366,11,342,9],[366,13,342,11],[366,17,342,15],[367,4,343,2,"perspective"],[367,15,343,13],[367,17,343,15],[368,2,344,0],[368,3,344,1],[369,2,345,0],[369,6,345,4,"SUPPORTED_INTERPOLATION_PARAMS"],[369,36,345,34],[369,39,345,37],[370,4,346,2,"inputRange"],[370,14,346,12],[370,16,346,14],[370,20,346,18],[371,4,347,2,"outputRange"],[371,15,347,13],[371,17,347,15],[371,21,347,19],[372,4,348,2,"extrapolate"],[372,15,348,13],[372,17,348,15],[372,21,348,19],[373,4,349,2,"extrapolateRight"],[373,20,349,18],[373,22,349,20],[373,26,349,24],[374,4,350,2,"extrapolateLeft"],[374,19,350,17],[374,21,350,19],[375,2,351,0],[375,3,351,1],[376,2,352,0],[376,11,352,9,"addWhitelistedStyleProp"],[376,34,352,32,"addWhitelistedStyleProp"],[376,35,352,33,"prop"],[376,39,352,37],[376,41,352,39],[377,4,353,2,"SUPPORTED_STYLES"],[377,20,353,18],[377,21,353,19,"prop"],[377,25,353,23],[377,26,353,24],[377,29,353,27],[377,33,353,31],[378,2,354,0],[379,2,355,0],[379,11,355,9,"addWhitelistedTransformProp"],[379,38,355,36,"addWhitelistedTransformProp"],[379,39,355,37,"prop"],[379,43,355,41],[379,45,355,43],[380,4,356,2,"SUPPORTED_TRANSFORMS"],[380,24,356,22],[380,25,356,23,"prop"],[380,29,356,27],[380,30,356,28],[380,33,356,31],[380,37,356,35],[381,2,357,0],[382,2,358,0],[382,11,358,9,"addWhitelistedInterpolationParam"],[382,43,358,41,"addWhitelistedInterpolationParam"],[382,44,358,42,"param"],[382,49,358,47],[382,51,358,49],[383,4,359,2,"SUPPORTED_INTERPOLATION_PARAMS"],[383,34,359,32],[383,35,359,33,"param"],[383,40,359,38],[383,41,359,39],[383,44,359,42],[383,48,359,46],[384,2,360,0],[385,2,361,0],[385,11,361,9,"isSupportedColorStyleProp"],[385,36,361,34,"isSupportedColorStyleProp"],[385,37,361,35,"prop"],[385,41,361,39],[385,43,361,41],[386,4,362,2],[386,11,362,9,"SUPPORTED_COLOR_STYLES"],[386,33,362,31],[386,34,362,32,"hasOwnProperty"],[386,48,362,46],[386,49,362,47,"prop"],[386,53,362,51],[386,54,362,52],[387,2,363,0],[388,2,364,0],[388,11,364,9,"isSupportedStyleProp"],[388,31,364,29,"isSupportedStyleProp"],[388,32,364,30,"prop"],[388,36,364,34],[388,38,364,36],[389,4,365,2],[389,11,365,9,"SUPPORTED_STYLES"],[389,27,365,25],[389,28,365,26,"hasOwnProperty"],[389,42,365,40],[389,43,365,41,"prop"],[389,47,365,45],[389,48,365,46],[390,2,366,0],[391,2,367,0],[391,11,367,9,"isSupportedTransformProp"],[391,35,367,33,"isSupportedTransformProp"],[391,36,367,34,"prop"],[391,40,367,38],[391,42,367,40],[392,4,368,2],[392,11,368,9,"SUPPORTED_TRANSFORMS"],[392,31,368,29],[392,32,368,30,"hasOwnProperty"],[392,46,368,44],[392,47,368,45,"prop"],[392,51,368,49],[392,52,368,50],[393,2,369,0],[394,2,370,0],[394,11,370,9,"isSupportedInterpolationParam"],[394,40,370,38,"isSupportedInterpolationParam"],[394,41,370,39,"param"],[394,46,370,44],[394,48,370,46],[395,4,371,2],[395,11,371,9,"SUPPORTED_INTERPOLATION_PARAMS"],[395,41,371,39],[395,42,371,40,"hasOwnProperty"],[395,56,371,54],[395,57,371,55,"param"],[395,62,371,60],[395,63,371,61],[396,2,372,0],[397,2,373,0],[397,11,373,9,"validateTransform"],[397,28,373,26,"validateTransform"],[397,29,373,27,"configs"],[397,36,373,34],[397,38,373,36],[398,4,374,2,"configs"],[398,11,374,9],[398,12,374,10,"forEach"],[398,19,374,17],[398,20,374,18],[398,30,374,18,"config"],[398,36,374,24],[398,38,374,28],[399,6,375,4],[399,10,375,8],[399,11,375,9,"isSupportedTransformProp"],[399,35,375,33],[399,36,375,34,"config"],[399,42,375,40],[399,43,375,41,"property"],[399,51,375,49],[399,52,375,50],[399,54,375,52],[400,8,376,6],[400,14,376,12],[400,18,376,16,"Error"],[400,23,376,21],[400,24,376,22],[400,36,376,34],[400,39,376,37,"config"],[400,45,376,43],[400,46,376,44,"property"],[400,54,376,52],[400,57,376,55],[400,103,376,101],[400,104,376,102],[401,6,377,4],[402,4,378,2],[402,5,378,3],[402,6,378,4],[403,2,379,0],[404,2,380,0],[404,11,380,9,"validateStyles"],[404,25,380,23,"validateStyles"],[404,26,380,24,"styles"],[404,32,380,30],[404,34,380,32],[405,4,381,2],[405,9,381,7],[405,13,381,11,"_key2"],[405,18,381,16],[405,22,381,20,"styles"],[405,28,381,26],[405,30,381,28],[406,6,382,4],[406,10,382,8],[406,11,382,9,"isSupportedStyleProp"],[406,31,382,29],[406,32,382,30,"_key2"],[406,37,382,35],[406,38,382,36],[406,40,382,38],[407,8,383,6],[407,14,383,12],[407,18,383,16,"Error"],[407,23,383,21],[407,24,383,22],[407,42,383,40],[407,45,383,43,"_key2"],[407,50,383,48],[407,53,383,51],[407,99,383,97],[407,100,383,98],[408,6,384,4],[409,4,385,2],[410,2,386,0],[411,2,387,0],[411,11,387,9,"validateInterpolation"],[411,32,387,30,"validateInterpolation"],[411,33,387,31,"config"],[411,39,387,37],[411,41,387,39],[412,4,388,2],[412,9,388,7],[412,13,388,11,"_key3"],[412,18,388,16],[412,22,388,20,"config"],[412,28,388,26],[412,30,388,28],[413,6,389,4],[413,10,389,8],[413,11,389,9,"isSupportedInterpolationParam"],[413,40,389,38],[413,41,389,39,"_key3"],[413,46,389,44],[413,47,389,45],[413,49,389,47],[414,8,390,6],[414,14,390,12],[414,18,390,16,"Error"],[414,23,390,21],[414,24,390,22],[414,50,390,48],[414,53,390,51,"_key3"],[414,58,390,56],[414,61,390,59],[414,107,390,105],[414,108,390,106],[415,6,391,4],[416,4,392,2],[417,2,393,0],[418,2,394,0],[418,11,394,9,"generateNewNodeTag"],[418,29,394,27,"generateNewNodeTag"],[418,30,394,27],[418,32,394,30],[419,4,395,2],[419,11,395,9,"__nativeAnimatedNodeTagCount"],[419,39,395,37],[419,41,395,39],[420,2,396,0],[421,2,397,0],[421,11,397,9,"generateNewAnimationId"],[421,33,397,31,"generateNewAnimationId"],[421,34,397,31],[421,36,397,34],[422,4,398,2],[422,11,398,9,"__nativeAnimationIdCount"],[422,35,398,33],[422,37,398,35],[423,2,399,0],[424,2,400,0],[424,11,400,9,"assertNativeAnimatedModule"],[424,37,400,35,"assertNativeAnimatedModule"],[424,38,400,35],[424,40,400,38],[425,4,401,2],[425,8,401,2,"invariant"],[425,26,401,11],[425,28,401,12,"NativeAnimatedModule"],[425,48,401,32],[425,50,401,34],[425,91,401,75],[425,92,401,76],[426,2,402,0],[427,2,403,0],[427,6,403,4,"_warnedMissingNativeAnimated"],[427,34,403,32],[427,37,403,35],[427,42,403,40],[428,2,404,0],[428,11,404,9,"shouldUseNativeDriver"],[428,32,404,30,"shouldUseNativeDriver"],[428,33,404,31,"config"],[428,39,404,37],[428,41,404,39],[429,4,405,2],[429,8,405,6,"config"],[429,14,405,12],[429,15,405,13,"useNativeDriver"],[429,30,405,28],[429,34,405,32],[429,38,405,36],[429,40,405,38],[430,6,406,4,"console"],[430,13,406,11],[430,14,406,12,"warn"],[430,18,406,16],[430,19,406,17],[430,87,406,85],[430,90,406,88],[430,146,406,144],[430,147,406,145],[431,4,407,2],[432,4,408,2],[432,8,408,6,"config"],[432,14,408,12],[432,15,408,13,"useNativeDriver"],[432,30,408,28],[432,35,408,33],[432,39,408,37],[432,43,408,41],[432,44,408,42,"NativeAnimatedModule"],[432,64,408,62],[432,66,408,64],[433,6,409,4],[433,10,409,8],[433,11,409,9,"_warnedMissingNativeAnimated"],[433,39,409,37],[433,41,409,39],[434,8,410,6,"console"],[434,15,410,13],[434,16,410,14,"warn"],[434,20,410,18],[434,21,410,19],[434,87,410,85],[434,90,410,88],[434,159,410,157],[434,162,410,160],[434,227,410,225],[434,230,410,228],[434,251,410,249],[434,254,410,252],[434,412,410,410],[434,413,410,411],[435,8,411,6,"_warnedMissingNativeAnimated"],[435,36,411,34],[435,39,411,37],[435,43,411,41],[436,6,412,4],[437,6,413,4],[437,13,413,11],[437,18,413,16],[438,4,414,2],[439,4,415,2],[439,11,415,9,"config"],[439,17,415,15],[439,18,415,16,"useNativeDriver"],[439,33,415,31],[439,37,415,35],[439,42,415,40],[440,2,416,0],[441,2,417,0],[441,11,417,9,"transformDataType"],[441,28,417,26,"transformDataType"],[441,29,417,27,"value"],[441,34,417,32],[441,36,417,34],[442,4,418,2],[443,4,419,2],[444,4,420,2],[444,8,420,6],[444,15,420,13,"value"],[444,20,420,18],[444,25,420,23],[444,33,420,31],[444,35,420,33],[445,6,421,4],[445,13,421,11,"value"],[445,18,421,16],[446,4,422,2],[447,4,423,2],[447,8,423,6],[447,14,423,12],[447,15,423,13,"test"],[447,19,423,17],[447,20,423,18,"value"],[447,25,423,23],[447,26,423,24],[447,28,423,26],[448,6,424,4],[448,10,424,8,"degrees"],[448,17,424,15],[448,20,424,18,"parseFloat"],[448,30,424,28],[448,31,424,29,"value"],[448,36,424,34],[448,37,424,35],[448,41,424,39],[448,42,424,40],[449,6,425,4],[449,10,425,8,"radians"],[449,17,425,15],[449,20,425,18,"degrees"],[449,27,425,25],[449,30,425,28,"Math"],[449,34,425,32],[449,35,425,33,"PI"],[449,37,425,35],[449,40,425,38],[449,45,425,43],[450,6,426,4],[450,13,426,11,"radians"],[450,20,426,18],[451,4,427,2],[451,5,427,3],[451,11,427,9],[452,6,428,4],[452,13,428,11,"value"],[452,18,428,16],[453,4,429,2],[454,2,430,0],[455,2,430,1],[455,6,430,1,"_default"],[455,14,430,1],[455,17,430,1,"exports"],[455,24,430,1],[455,25,430,1,"default"],[455,32,430,1],[455,35,432,15],[456,4,433,2,"API"],[456,7,433,5],[457,4,434,2,"isSupportedColorStyleProp"],[457,29,434,27],[458,4,435,2,"isSupportedStyleProp"],[458,24,435,22],[459,4,436,2,"isSupportedTransformProp"],[459,28,436,26],[460,4,437,2,"isSupportedInterpolationParam"],[460,33,437,31],[461,4,438,2,"addWhitelistedStyleProp"],[461,27,438,25],[462,4,439,2,"addWhitelistedTransformProp"],[462,31,439,29],[463,4,440,2,"addWhitelistedInterpolationParam"],[463,36,440,34],[464,4,441,2,"validateStyles"],[464,18,441,16],[465,4,442,2,"validateTransform"],[465,21,442,19],[466,4,443,2,"validateInterpolation"],[466,25,443,23],[467,4,444,2,"generateNewNodeTag"],[467,22,444,20],[468,4,445,2,"generateNewAnimationId"],[468,26,445,24],[469,4,446,2,"assertNativeAnimatedModule"],[469,30,446,28],[470,4,447,2,"shouldUseNativeDriver"],[470,25,447,23],[471,4,448,2,"transformDataType"],[471,21,448,19],[472,4,449,2],[473,4,450,2],[474,4,451,2],[474,8,451,6,"nativeEventEmitter"],[474,26,451,24,"nativeEventEmitter"],[474,27,451,24],[474,29,451,27],[475,6,452,4],[475,10,452,8],[475,11,452,9,"nativeEventEmitter"],[475,29,452,27],[475,31,452,29],[476,8,453,6,"nativeEventEmitter"],[476,26,453,24],[476,29,453,27],[476,33,453,31,"NativeEventEmitter"],[476,60,453,49],[477,8,454,6],[478,8,455,6],[479,8,456,6,"Platform"],[479,25,456,14],[479,26,456,15,"OS"],[479,28,456,17],[479,33,456,22],[479,38,456,27],[479,41,456,30],[479,45,456,34],[479,48,456,37,"NativeAnimatedModule"],[479,68,456,57],[479,69,456,58],[480,6,457,4],[481,6,458,4],[481,13,458,11,"nativeEventEmitter"],[481,31,458,29],[482,4,459,2],[483,2,460,0],[483,3,460,1],[484,0,460,1]],"functionMap":{"names":["<global>","<anonymous>","apis.reduce$argument_0","getValue","setWaitingForIdentifier","unsetWaitingForIdentifier","disableQueue","flushQueue","queueOperation","queue.push$argument_0","createAnimatedNode","updateAnimatedNodeConfig","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","connectAnimatedNodes","disconnectAnimatedNodes","startAnimatingNode","stopAnimation","setAnimatedNodeValue","setAnimatedNodeOffset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","disconnectAnimatedNodeFromView","restoreDefaultValues","dropAnimatedNode","addAnimatedEventToView","API.removeAnimatedEventFromView","setupGlobalEventEmitterListeners","RCTDeviceEventEmitter.addListener$argument_1","addWhitelistedStyleProp","addWhitelistedTransformProp","addWhitelistedInterpolationParam","isSupportedColorStyleProp","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs.forEach$argument_0","validateStyles","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","shouldUseNativeDriver","transformDataType","default.get__nativeEventEmitter"],"mappings":"AAA;sCCoC;qBC2C;GDK;CDC;YGO;GHW;2BIC;GJM;6BKC;GLM;gBMC;GNS;cOC;GPmC;kBQC;iBCe,iBD;GRI;sBUC;GVG;4BWC;GXK;qCYC;GZG;oCaC;GbG;wBcC;GdG;2BeC;GfG;sBgBC;GhBW;iBiBC;GjBG;wBkBC;GlBG;yBmBC;GnBG;6BoBC;GpBG;6BqBC;GrBG;6BsBC;GtBG;kCuBC;GvBG;wBwBC;GxBM;oByBC;GzBG;0B0BC;G1BG;E2BC;G3BG;A4BE;2GCC;GDQ;6HCC;GDQ;C5BC;A8B8D;C9BE;A+BC;C/BE;AgCC;ChCE;AiCC;CjCE;AkCC;ClCE;AmCC;CnCE;AoCC;CpCE;AqCC;kBCC;GDI;CrCC;AuCC;CvCM;AwCC;CxCM;AyCC;CzCE;A0CC;C1CE;A2CC;C3CE;A4CE;C5CY;A6CC;C7Ca;E8CqB;G9CQ"}},"type":"js/module"}]}