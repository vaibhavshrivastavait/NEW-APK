{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":154,"column":1,"index":6762}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0,"index":225},"end":{"line":13,"column":65,"index":290}}],"key":"cO+kR170JcyEW83FKera/I0tgxg="}},{"name":"./nodes/AnimatedProps","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0,"index":291},"end":{"line":14,"column":50,"index":341}}],"key":"t4ZPNv99gCT+ys58yK2MYmEcBMA="}},{"name":"./AnimatedEvent","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0,"index":342},"end":{"line":15,"column":48,"index":390}}],"key":"HOnHqnbjAcj/KCNluvPGmX3fOfk="}},{"name":"../Utilities/useRefEffect","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0,"index":391},"end":{"line":16,"column":53,"index":444}}],"key":"0Ino3uH9u8KSQHLp3+X6UggVxDg="}},{"name":"./NativeAnimatedHelper","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0,"index":445},"end":{"line":17,"column":58,"index":503}}],"key":"6BPYM8/QSn/uL9frVIhpnADZnTI="}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":18,"column":0,"index":504},"end":{"line":18,"column":76,"index":580}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../../../modules/useLayoutEffect","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0,"index":581},"end":{"line":19,"column":63,"index":644}}],"key":"cnVsYABBDXE6rscjpCZHK77Wsag="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useAnimatedProps;\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread2\"));\n  var _AnimatedProps = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./nodes/AnimatedProps\"));\n  var _AnimatedEvent = _$$_REQUIRE(_dependencyMap[3], \"./AnimatedEvent\");\n  var _useRefEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../Utilities/useRefEffect\"));\n  var _NativeAnimatedHelper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./NativeAnimatedHelper\"));\n  var _react = _$$_REQUIRE(_dependencyMap[6], \"react\");\n  var _useLayoutEffect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../../modules/useLayoutEffect\"));\n  function useAnimatedProps(props) {\n    var _useReducer = (0, _react.useReducer)(function (count) {\n        return count + 1;\n      }, 0),\n      scheduleUpdate = _useReducer[1];\n    var onUpdateRef = (0, _react.useRef)(null);\n\n    // TODO: Only invalidate `node` if animated props or `style` change. In the\n    // previous implementation, we permitted `style` to override props with the\n    // same name property name as styles, so we can probably continue doing that.\n    // The ordering of other props *should* not matter.\n    var node = (0, _react.useMemo)(function () {\n      return new _AnimatedProps.default(props, function () {\n        return onUpdateRef.current == null ? void 0 : onUpdateRef.current();\n      });\n    }, [props]);\n    useAnimatedPropsLifecycle(node);\n\n    // TODO: This \"effect\" does three things:\n    //\n    //   1) Call `setNativeView`.\n    //   2) Update `onUpdateRef`.\n    //   3) Update listeners for `AnimatedEvent` props.\n    //\n    // Ideally, each of these would be separat \"effects\" so that they are not\n    // unnecessarily re-run when irrelevant dependencies change. For example, we\n    // should be able to hoist all `AnimatedEvent` props and only do #3 if either\n    // the `AnimatedEvent` props change or `instance` changes.\n    //\n    // But there is no way to transparently compose three separate callback refs,\n    // so we just combine them all into one for now.\n    var refEffect = (0, _react.useCallback)(function (instance) {\n      // NOTE: This may be called more often than necessary (e.g. when `props`\n      // changes), but `setNativeView` already optimizes for that.\n      node.setNativeView(instance);\n\n      // NOTE: This callback is only used by the JavaScript animation driver.\n      onUpdateRef.current = function () {\n        // Schedule an update for this component to update `reducedProps`,\n        // but do not compute it immediately. If a parent also updated, we\n        // need to merge those new props in before updating.\n        scheduleUpdate();\n      };\n      var target = getEventTarget(instance);\n      var events = [];\n      for (var propName in props) {\n        var propValue = props[propName];\n        if (propValue instanceof _AnimatedEvent.AnimatedEvent && propValue.__isNative) {\n          propValue.__attach(target, propName);\n          events.push([propName, propValue]);\n        }\n      }\n      return function () {\n        onUpdateRef.current = null;\n        for (var _i = 0, _events = events; _i < _events.length; _i++) {\n          var _events$_i = _events[_i],\n            _propName = _events$_i[0],\n            _propValue = _events$_i[1];\n          _propValue.__detach(target, _propName);\n        }\n      };\n    }, [props, node]);\n    var callbackRef = (0, _useRefEffect.default)(refEffect);\n    return [reduceAnimatedProps(node), callbackRef];\n  }\n  function reduceAnimatedProps(node) {\n    // Force `collapsable` to be false so that the native view is not flattened.\n    // Flattened views cannot be accurately referenced by the native driver.\n    return (0, _objectSpread2.default)((0, _objectSpread2.default)({}, node.__getValue()), {}, {\n      collapsable: false\n    });\n  }\n\n  /**\n   * Manages the lifecycle of the supplied `AnimatedProps` by invoking `__attach`\n   * and `__detach`. However, this is more complicated because `AnimatedProps`\n   * uses reference counting to determine when to recursively detach its children\n   * nodes. So in order to optimize this, we avoid detaching until the next attach\n   * unless we are unmounting.\n   */\n  function useAnimatedPropsLifecycle(node) {\n    var prevNodeRef = (0, _react.useRef)(null);\n    var isUnmountingRef = (0, _react.useRef)(false);\n    (0, _react.useEffect)(function () {\n      // It is ok for multiple components to call `flushQueue` because it noops\n      // if the queue is empty. When multiple animated components are mounted at\n      // the same time. Only first component flushes the queue and the others will noop.\n      _NativeAnimatedHelper.default.API.flushQueue();\n    });\n    (0, _useLayoutEffect.default)(function () {\n      isUnmountingRef.current = false;\n      return function () {\n        isUnmountingRef.current = true;\n      };\n    }, []);\n    (0, _useLayoutEffect.default)(function () {\n      node.__attach();\n      if (prevNodeRef.current != null) {\n        var prevNode = prevNodeRef.current;\n        // TODO: Stop restoring default values (unless `reset` is called).\n        prevNode.__restoreDefaultValues();\n        prevNode.__detach();\n        prevNodeRef.current = null;\n      }\n      return function () {\n        if (isUnmountingRef.current) {\n          // NOTE: Do not restore default values on unmount, see D18197735.\n          node.__detach();\n        } else {\n          prevNodeRef.current = node;\n        }\n      };\n    }, [node]);\n  }\n  function getEventTarget(instance) {\n    return typeof instance === 'object' && typeof (instance == null ? void 0 : instance.getScrollableNode) === 'function' ?\n    // $FlowFixMe[incompatible-use] - Legacy instance assumptions.\n    instance.getScrollableNode() : instance;\n  }\n\n  // $FlowFixMe[unclear-type] - Legacy instance assumptions.\n  function isFabricInstance(instance) {\n    var _instance$getScrollRe;\n    return hasFabricHandle(instance) ||\n    // Some components have a setNativeProps function but aren't a host component\n    // such as lists like FlatList and SectionList. These should also use\n    // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying\n    // host component. This crazy hack is essentially special casing those lists and\n    // ScrollView itself to use forceUpdate in Fabric.\n    // If these components end up using forwardRef then these hacks can go away\n    // as instance would actually be the underlying host component and the above check\n    // would be sufficient.\n    hasFabricHandle(instance == null ? void 0 : instance.getNativeScrollRef == null ? void 0 : instance.getNativeScrollRef()) || hasFabricHandle(instance == null ? void 0 : instance.getScrollResponder == null ? void 0 : (_instance$getScrollRe = instance.getScrollResponder()) == null ? void 0 : _instance$getScrollRe.getNativeScrollRef == null ? void 0 : _instance$getScrollRe.getNativeScrollRef());\n  }\n\n  // $FlowFixMe[unclear-type] - Legacy instance assumptions.\n  function hasFabricHandle(instance) {\n    var _instance$_internalIn, _instance$_internalIn2;\n    // eslint-disable-next-line dot-notation\n    return (instance == null ? void 0 : (_instance$_internalIn = instance['_internalInstanceHandle']) == null ? void 0 : (_instance$_internalIn2 = _instance$_internalIn.stateNode) == null ? void 0 : _instance$_internalIn2.canonical) != null;\n  }\n});","lineCount":167,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,11,13],[14,6,11,13,"_interopRequireDefault"],[14,28,11,13],[14,31,11,13,"_$$_REQUIRE"],[14,42,11,13],[14,43,11,13,"_dependencyMap"],[14,57,11,13],[15,2,11,13,"Object"],[15,8,11,13],[15,9,11,13,"defineProperty"],[15,23,11,13],[15,24,11,13,"exports"],[15,31,11,13],[16,4,11,13,"value"],[16,9,11,13],[17,2,11,13],[18,2,11,13,"exports"],[18,9,11,13],[18,10,11,13,"default"],[18,17,11,13],[18,20,11,13,"useAnimatedProps"],[18,36,11,13],[19,2,13,0],[19,6,13,0,"_objectSpread2"],[19,20,13,0],[19,23,13,0,"_interopRequireDefault"],[19,45,13,0],[19,46,13,0,"_$$_REQUIRE"],[19,57,13,0],[19,58,13,0,"_dependencyMap"],[19,72,13,0],[20,2,14,0],[20,6,14,0,"_AnimatedProps"],[20,20,14,0],[20,23,14,0,"_interopRequireDefault"],[20,45,14,0],[20,46,14,0,"_$$_REQUIRE"],[20,57,14,0],[20,58,14,0,"_dependencyMap"],[20,72,14,0],[21,2,15,0],[21,6,15,0,"_AnimatedEvent"],[21,20,15,0],[21,23,15,0,"_$$_REQUIRE"],[21,34,15,0],[21,35,15,0,"_dependencyMap"],[21,49,15,0],[22,2,16,0],[22,6,16,0,"_useRefEffect"],[22,19,16,0],[22,22,16,0,"_interopRequireDefault"],[22,44,16,0],[22,45,16,0,"_$$_REQUIRE"],[22,56,16,0],[22,57,16,0,"_dependencyMap"],[22,71,16,0],[23,2,17,0],[23,6,17,0,"_NativeAnimatedHelper"],[23,27,17,0],[23,30,17,0,"_interopRequireDefault"],[23,52,17,0],[23,53,17,0,"_$$_REQUIRE"],[23,64,17,0],[23,65,17,0,"_dependencyMap"],[23,79,17,0],[24,2,18,0],[24,6,18,0,"_react"],[24,12,18,0],[24,15,18,0,"_$$_REQUIRE"],[24,26,18,0],[24,27,18,0,"_dependencyMap"],[24,41,18,0],[25,2,19,0],[25,6,19,0,"_useLayoutEffect"],[25,22,19,0],[25,25,19,0,"_interopRequireDefault"],[25,47,19,0],[25,48,19,0,"_$$_REQUIRE"],[25,59,19,0],[25,60,19,0,"_dependencyMap"],[25,74,19,0],[26,2,20,15],[26,11,20,24,"useAnimatedProps"],[26,27,20,40,"useAnimatedProps"],[26,28,20,41,"props"],[26,33,20,46],[26,35,20,48],[27,4,21,2],[27,8,21,6,"_useReducer"],[27,19,21,17],[27,22,21,20],[27,26,21,20,"useReducer"],[27,43,21,30],[27,45,21,31],[27,55,21,31,"count"],[27,60,21,36],[28,8,21,36],[28,15,21,40,"count"],[28,20,21,45],[28,23,21,48],[28,24,21,49],[29,6,21,49],[29,9,21,51],[29,10,21,52],[29,11,21,53],[30,6,22,4,"scheduleUpdate"],[30,20,22,18],[30,23,22,21,"_useReducer"],[30,34,22,32],[30,35,22,33],[30,36,22,34],[30,37,22,35],[31,4,23,2],[31,8,23,6,"onUpdateRef"],[31,19,23,17],[31,22,23,20],[31,26,23,20,"useRef"],[31,39,23,26],[31,41,23,27],[31,45,23,31],[31,46,23,32],[33,4,25,2],[34,4,26,2],[35,4,27,2],[36,4,28,2],[37,4,29,2],[37,8,29,6,"node"],[37,12,29,10],[37,15,29,13],[37,19,29,13,"useMemo"],[37,33,29,20],[37,35,29,21],[38,6,29,21],[38,13,29,27],[38,17,29,31,"AnimatedProps"],[38,39,29,44],[38,40,29,45,"props"],[38,45,29,50],[38,47,29,52],[39,8,29,52],[39,15,29,58,"onUpdateRef"],[39,26,29,69],[39,27,29,70,"current"],[39,34,29,77],[39,38,29,81],[39,42,29,85],[39,45,29,88],[39,50,29,93],[39,51,29,94],[39,54,29,97,"onUpdateRef"],[39,65,29,108],[39,66,29,109,"current"],[39,73,29,116],[39,74,29,117],[39,75,29,118],[40,6,29,118],[40,8,29,119],[41,4,29,119],[41,7,29,121],[41,8,29,122,"props"],[41,13,29,127],[41,14,29,128],[41,15,29,129],[42,4,30,2,"useAnimatedPropsLifecycle"],[42,29,30,27],[42,30,30,28,"node"],[42,34,30,32],[42,35,30,33],[44,4,32,2],[45,4,33,2],[46,4,34,2],[47,4,35,2],[48,4,36,2],[49,4,37,2],[50,4,38,2],[51,4,39,2],[52,4,40,2],[53,4,41,2],[54,4,42,2],[55,4,43,2],[56,4,44,2],[57,4,45,2],[57,8,45,6,"refEffect"],[57,17,45,15],[57,20,45,18],[57,24,45,18,"useCallback"],[57,42,45,29],[57,44,45,30],[57,54,45,30,"instance"],[57,62,45,38],[57,64,45,42],[58,6,46,4],[59,6,47,4],[60,6,48,4,"node"],[60,10,48,8],[60,11,48,9,"setNativeView"],[60,24,48,22],[60,25,48,23,"instance"],[60,33,48,31],[60,34,48,32],[62,6,50,4],[63,6,51,4,"onUpdateRef"],[63,17,51,15],[63,18,51,16,"current"],[63,25,51,23],[63,28,51,26],[63,40,51,32],[64,8,52,6],[65,8,53,6],[66,8,54,6],[67,8,55,6,"scheduleUpdate"],[67,22,55,20],[67,23,55,21],[67,24,55,22],[68,6,56,4],[68,7,56,5],[69,6,57,4],[69,10,57,8,"target"],[69,16,57,14],[69,19,57,17,"getEventTarget"],[69,33,57,31],[69,34,57,32,"instance"],[69,42,57,40],[69,43,57,41],[70,6,58,4],[70,10,58,8,"events"],[70,16,58,14],[70,19,58,17],[70,21,58,19],[71,6,59,4],[71,11,59,9],[71,15,59,13,"propName"],[71,23,59,21],[71,27,59,25,"props"],[71,32,59,30],[71,34,59,32],[72,8,60,6],[72,12,60,10,"propValue"],[72,21,60,19],[72,24,60,22,"props"],[72,29,60,27],[72,30,60,28,"propName"],[72,38,60,36],[72,39,60,37],[73,8,61,6],[73,12,61,10,"propValue"],[73,21,61,19],[73,33,61,31,"AnimatedEvent"],[73,61,61,44],[73,65,61,48,"propValue"],[73,74,61,57],[73,75,61,58,"__isNative"],[73,85,61,68],[73,87,61,70],[74,10,62,8,"propValue"],[74,19,62,17],[74,20,62,18,"__attach"],[74,28,62,26],[74,29,62,27,"target"],[74,35,62,33],[74,37,62,35,"propName"],[74,45,62,43],[74,46,62,44],[75,10,63,8,"events"],[75,16,63,14],[75,17,63,15,"push"],[75,21,63,19],[75,22,63,20],[75,23,63,21,"propName"],[75,31,63,29],[75,33,63,31,"propValue"],[75,42,63,40],[75,43,63,41],[75,44,63,42],[76,8,64,6],[77,6,65,4],[78,6,66,4],[78,13,66,11],[78,25,66,17],[79,8,67,6,"onUpdateRef"],[79,19,67,17],[79,20,67,18,"current"],[79,27,67,25],[79,30,67,28],[79,34,67,32],[80,8,68,6],[80,13,68,11],[80,17,68,15,"_i"],[80,19,68,17],[80,22,68,20],[80,23,68,21],[80,25,68,23,"_events"],[80,32,68,30],[80,35,68,33,"events"],[80,41,68,39],[80,43,68,41,"_i"],[80,45,68,43],[80,48,68,46,"_events"],[80,55,68,53],[80,56,68,54,"length"],[80,62,68,60],[80,64,68,62,"_i"],[80,66,68,64],[80,68,68,66],[80,70,68,68],[81,10,69,8],[81,14,69,12,"_events$_i"],[81,24,69,22],[81,27,69,25,"_events"],[81,34,69,32],[81,35,69,33,"_i"],[81,37,69,35],[81,38,69,36],[82,12,70,10,"_propName"],[82,21,70,19],[82,24,70,22,"_events$_i"],[82,34,70,32],[82,35,70,33],[82,36,70,34],[82,37,70,35],[83,12,71,10,"_propValue"],[83,22,71,20],[83,25,71,23,"_events$_i"],[83,35,71,33],[83,36,71,34],[83,37,71,35],[83,38,71,36],[84,10,72,8,"_propValue"],[84,20,72,18],[84,21,72,19,"__detach"],[84,29,72,27],[84,30,72,28,"target"],[84,36,72,34],[84,38,72,36,"_propName"],[84,47,72,45],[84,48,72,46],[85,8,73,6],[86,6,74,4],[86,7,74,5],[87,4,75,2],[87,5,75,3],[87,7,75,5],[87,8,75,6,"props"],[87,13,75,11],[87,15,75,13,"node"],[87,19,75,17],[87,20,75,18],[87,21,75,19],[88,4,76,2],[88,8,76,6,"callbackRef"],[88,19,76,17],[88,22,76,20],[88,26,76,20,"useRefEffect"],[88,47,76,32],[88,49,76,33,"refEffect"],[88,58,76,42],[88,59,76,43],[89,4,77,2],[89,11,77,9],[89,12,77,10,"reduceAnimatedProps"],[89,31,77,29],[89,32,77,30,"node"],[89,36,77,34],[89,37,77,35],[89,39,77,37,"callbackRef"],[89,50,77,48],[89,51,77,49],[90,2,78,0],[91,2,79,0],[91,11,79,9,"reduceAnimatedProps"],[91,30,79,28,"reduceAnimatedProps"],[91,31,79,29,"node"],[91,35,79,33],[91,37,79,35],[92,4,80,2],[93,4,81,2],[94,4,82,2],[94,11,82,9],[94,15,82,9,"_objectSpread"],[94,37,82,22],[94,39,82,23],[94,43,82,23,"_objectSpread"],[94,65,82,36],[94,67,82,37],[94,68,82,38],[94,69,82,39],[94,71,82,41,"node"],[94,75,82,45],[94,76,82,46,"__getValue"],[94,86,82,56],[94,87,82,57],[94,88,82,58],[94,89,82,59],[94,91,82,61],[94,92,82,62],[94,93,82,63],[94,95,82,65],[95,6,83,4,"collapsable"],[95,17,83,15],[95,19,83,17],[96,4,84,2],[96,5,84,3],[96,6,84,4],[97,2,85,0],[99,2,87,0],[100,0,88,0],[101,0,89,0],[102,0,90,0],[103,0,91,0],[104,0,92,0],[105,0,93,0],[106,2,94,0],[106,11,94,9,"useAnimatedPropsLifecycle"],[106,36,94,34,"useAnimatedPropsLifecycle"],[106,37,94,35,"node"],[106,41,94,39],[106,43,94,41],[107,4,95,2],[107,8,95,6,"prevNodeRef"],[107,19,95,17],[107,22,95,20],[107,26,95,20,"useRef"],[107,39,95,26],[107,41,95,27],[107,45,95,31],[107,46,95,32],[108,4,96,2],[108,8,96,6,"isUnmountingRef"],[108,23,96,21],[108,26,96,24],[108,30,96,24,"useRef"],[108,43,96,30],[108,45,96,31],[108,50,96,36],[108,51,96,37],[109,4,97,2],[109,8,97,2,"useEffect"],[109,24,97,11],[109,26,97,12],[109,38,97,18],[110,6,98,4],[111,6,99,4],[112,6,100,4],[113,6,101,4,"NativeAnimatedHelper"],[113,35,101,24],[113,36,101,25,"API"],[113,39,101,28],[113,40,101,29,"flushQueue"],[113,50,101,39],[113,51,101,40],[113,52,101,41],[114,4,102,2],[114,5,102,3],[114,6,102,4],[115,4,103,2],[115,8,103,2,"useLayoutEffect"],[115,32,103,17],[115,34,103,18],[115,46,103,24],[116,6,104,4,"isUnmountingRef"],[116,21,104,19],[116,22,104,20,"current"],[116,29,104,27],[116,32,104,30],[116,37,104,35],[117,6,105,4],[117,13,105,11],[117,25,105,17],[118,8,106,6,"isUnmountingRef"],[118,23,106,21],[118,24,106,22,"current"],[118,31,106,29],[118,34,106,32],[118,38,106,36],[119,6,107,4],[119,7,107,5],[120,4,108,2],[120,5,108,3],[120,7,108,5],[120,9,108,7],[120,10,108,8],[121,4,109,2],[121,8,109,2,"useLayoutEffect"],[121,32,109,17],[121,34,109,18],[121,46,109,24],[122,6,110,4,"node"],[122,10,110,8],[122,11,110,9,"__attach"],[122,19,110,17],[122,20,110,18],[122,21,110,19],[123,6,111,4],[123,10,111,8,"prevNodeRef"],[123,21,111,19],[123,22,111,20,"current"],[123,29,111,27],[123,33,111,31],[123,37,111,35],[123,39,111,37],[124,8,112,6],[124,12,112,10,"prevNode"],[124,20,112,18],[124,23,112,21,"prevNodeRef"],[124,34,112,32],[124,35,112,33,"current"],[124,42,112,40],[125,8,113,6],[126,8,114,6,"prevNode"],[126,16,114,14],[126,17,114,15,"__restoreDefaultValues"],[126,39,114,37],[126,40,114,38],[126,41,114,39],[127,8,115,6,"prevNode"],[127,16,115,14],[127,17,115,15,"__detach"],[127,25,115,23],[127,26,115,24],[127,27,115,25],[128,8,116,6,"prevNodeRef"],[128,19,116,17],[128,20,116,18,"current"],[128,27,116,25],[128,30,116,28],[128,34,116,32],[129,6,117,4],[130,6,118,4],[130,13,118,11],[130,25,118,17],[131,8,119,6],[131,12,119,10,"isUnmountingRef"],[131,27,119,25],[131,28,119,26,"current"],[131,35,119,33],[131,37,119,35],[132,10,120,8],[133,10,121,8,"node"],[133,14,121,12],[133,15,121,13,"__detach"],[133,23,121,21],[133,24,121,22],[133,25,121,23],[134,8,122,6],[134,9,122,7],[134,15,122,13],[135,10,123,8,"prevNodeRef"],[135,21,123,19],[135,22,123,20,"current"],[135,29,123,27],[135,32,123,30,"node"],[135,36,123,34],[136,8,124,6],[137,6,125,4],[137,7,125,5],[138,4,126,2],[138,5,126,3],[138,7,126,5],[138,8,126,6,"node"],[138,12,126,10],[138,13,126,11],[138,14,126,12],[139,2,127,0],[140,2,128,0],[140,11,128,9,"getEventTarget"],[140,25,128,23,"getEventTarget"],[140,26,128,24,"instance"],[140,34,128,32],[140,36,128,34],[141,4,129,2],[141,11,129,9],[141,18,129,16,"instance"],[141,26,129,24],[141,31,129,29],[141,39,129,37],[141,43,129,41],[141,51,129,49,"instance"],[141,59,129,57],[141,63,129,61],[141,67,129,65],[141,70,129,68],[141,75,129,73],[141,76,129,74],[141,79,129,77,"instance"],[141,87,129,85],[141,88,129,86,"getScrollableNode"],[141,105,129,103],[141,106,129,104],[141,111,129,109],[141,121,129,119],[142,4,130,2],[143,4,131,2,"instance"],[143,12,131,10],[143,13,131,11,"getScrollableNode"],[143,30,131,28],[143,31,131,29],[143,32,131,30],[143,35,131,33,"instance"],[143,43,131,41],[144,2,132,0],[146,2,134,0],[147,2,135,0],[147,11,135,9,"isFabricInstance"],[147,27,135,25,"isFabricInstance"],[147,28,135,26,"instance"],[147,36,135,34],[147,38,135,36],[148,4,136,2],[148,8,136,6,"_instance$getScrollRe"],[148,29,136,27],[149,4,137,2],[149,11,137,9,"hasFabricHandle"],[149,26,137,24],[149,27,137,25,"instance"],[149,35,137,33],[149,36,137,34],[150,4,138,2],[151,4,139,2],[152,4,140,2],[153,4,141,2],[154,4,142,2],[155,4,143,2],[156,4,144,2],[157,4,145,2],[158,4,146,2,"hasFabricHandle"],[158,19,146,17],[158,20,146,18,"instance"],[158,28,146,26],[158,32,146,30],[158,36,146,34],[158,39,146,37],[158,44,146,42],[158,45,146,43],[158,48,146,46,"instance"],[158,56,146,54],[158,57,146,55,"getNativeScrollRef"],[158,75,146,73],[158,79,146,77],[158,83,146,81],[158,86,146,84],[158,91,146,89],[158,92,146,90],[158,95,146,93,"instance"],[158,103,146,101],[158,104,146,102,"getNativeScrollRef"],[158,122,146,120],[158,123,146,121],[158,124,146,122],[158,125,146,123],[158,129,146,127,"hasFabricHandle"],[158,144,146,142],[158,145,146,143,"instance"],[158,153,146,151],[158,157,146,155],[158,161,146,159],[158,164,146,162],[158,169,146,167],[158,170,146,168],[158,173,146,171,"instance"],[158,181,146,179],[158,182,146,180,"getScrollResponder"],[158,200,146,198],[158,204,146,202],[158,208,146,206],[158,211,146,209],[158,216,146,214],[158,217,146,215],[158,220,146,218],[158,221,146,219,"_instance$getScrollRe"],[158,242,146,240],[158,245,146,243,"instance"],[158,253,146,251],[158,254,146,252,"getScrollResponder"],[158,272,146,270],[158,273,146,271],[158,274,146,272],[158,279,146,277],[158,283,146,281],[158,286,146,284],[158,291,146,289],[158,292,146,290],[158,295,146,293,"_instance$getScrollRe"],[158,316,146,314],[158,317,146,315,"getNativeScrollRef"],[158,335,146,333],[158,339,146,337],[158,343,146,341],[158,346,146,344],[158,351,146,349],[158,352,146,350],[158,355,146,353,"_instance$getScrollRe"],[158,376,146,374],[158,377,146,375,"getNativeScrollRef"],[158,395,146,393],[158,396,146,394],[158,397,146,395],[158,398,146,396],[159,2,147,0],[161,2,149,0],[162,2,150,0],[162,11,150,9,"hasFabricHandle"],[162,26,150,24,"hasFabricHandle"],[162,27,150,25,"instance"],[162,35,150,33],[162,37,150,35],[163,4,151,2],[163,8,151,6,"_instance$_internalIn"],[163,29,151,27],[163,31,151,29,"_instance$_internalIn2"],[163,53,151,51],[164,4,152,2],[165,4,153,2],[165,11,153,9],[165,12,153,10,"instance"],[165,20,153,18],[165,24,153,22],[165,28,153,26],[165,31,153,29],[165,36,153,34],[165,37,153,35],[165,40,153,38],[165,41,153,39,"_instance$_internalIn"],[165,62,153,60],[165,65,153,63,"instance"],[165,73,153,71],[165,74,153,72],[165,99,153,97],[165,100,153,98],[165,105,153,103],[165,109,153,107],[165,112,153,110],[165,117,153,115],[165,118,153,116],[165,121,153,119],[165,122,153,120,"_instance$_internalIn2"],[165,144,153,142],[165,147,153,145,"_instance$_internalIn"],[165,168,153,166],[165,169,153,167,"stateNode"],[165,178,153,176],[165,183,153,181],[165,187,153,185],[165,190,153,188],[165,195,153,193],[165,196,153,194],[165,199,153,197,"_instance$_internalIn2"],[165,221,153,219],[165,222,153,220,"canonical"],[165,231,153,229],[165,236,153,234],[165,240,153,238],[166,2,154,0],[167,0,154,1]],"functionMap":{"names":["<global>","useAnimatedProps","useReducer$argument_0","useMemo$argument_0","AnimatedProps$argument_1","refEffect","onUpdateRef.current","<anonymous>","reduceAnimatedProps","useAnimatedPropsLifecycle","useEffect$argument_0","useLayoutEffect$argument_0","getEventTarget","isFabricInstance","hasFabricHandle"],"mappings":"AAA;eCmB;+BCC,kBD;qBEQ,+BC,kED,CF;8BIgB;0BCM;KDK;WEU;KFQ;GJC;CDG;AQC;CRM;ASS;YCG;GDK;kBEC;WJE;KIE;GFC;kBEC;WJS;KIO;GFC;CTC;AYC;CZI;AaG;CbY;AcG"}},"type":"js/module"}]}