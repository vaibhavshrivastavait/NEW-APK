{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":1,"index":2724}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":1,"index":2724}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":98,"column":1,"index":2724}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n  /**\n   * EventEmitter manages listeners and publishes events to them.\n   *\n   * EventEmitter accepts a single type parameter that defines the valid events\n   * and associated listener argument(s).\n   *\n   * @example\n   *\n   *   const emitter = new EventEmitter<{\n   *     success: [number, string],\n   *     error: [Error],\n   *   }>();\n   *\n   *   emitter.on('success', (statusCode, responseText) => {...});\n   *   emitter.emit('success', 200, '...');\n   *\n   *   emitter.on('error', error => {...});\n   *   emitter.emit('error', new Error('Resource not found'));\n   *\n   */\n  var EventEmitter = exports.default = /*#__PURE__*/function () {\n    function EventEmitter() {\n      (0, _classCallCheck2.default)(this, EventEmitter);\n      this._registry = {};\n    }\n    /**\n     * Registers a listener that is called when the supplied event is emitted.\n     * Returns a subscription that has a `remove` method to undo registration.\n     */\n    return (0, _createClass2.default)(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        var registrations = allocate(this._registry, eventType);\n        var registration = {\n          context,\n          listener,\n          remove() {\n            registrations.delete(registration);\n          }\n        };\n        registrations.add(registration);\n        return registration;\n      }\n\n      /**\n       * Emits the supplied event. Additional arguments supplied to `emit` will be\n       * passed through to each of the registered listeners.\n       *\n       * If a listener modifies the listeners registered for the same event, those\n       * changes will not be reflected in the current invocation of `emit`.\n       */\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var registrations = this._registry[eventType];\n        if (registrations != null) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          for (var _i = 0, _arr = [...registrations]; _i < _arr.length; _i++) {\n            var registration = _arr[_i];\n            registration.listener.apply(registration.context, args);\n          }\n        }\n      }\n\n      /**\n       * Removes all registered listeners.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        if (eventType == null) {\n          this._registry = {};\n        } else {\n          delete this._registry[eventType];\n        }\n      }\n\n      /**\n       * Returns the number of registered listeners for the supplied event.\n       */\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        var registrations = this._registry[eventType];\n        return registrations == null ? 0 : registrations.size;\n      }\n    }]);\n  }();\n  function allocate(registry, eventType) {\n    var registrations = registry[eventType];\n    if (registrations == null) {\n      registrations = new Set();\n      registry[eventType] = registrations;\n    }\n    return registrations;\n  }\n});","lineCount":116,"map":[[9,2,1,0],[10,0,2,0],[11,0,3,0],[12,0,4,0],[13,0,5,0],[14,0,6,0],[15,0,7,0],[16,0,8,0],[17,0,9,0],[18,2,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,0,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,0,25,0],[33,0,26,0],[34,0,27,0],[35,0,28,0],[36,0,29,0],[37,0,30,0],[38,2,11,0],[38,6,31,21,"EventEmitter"],[38,18,31,33],[38,21,31,33,"exports"],[38,28,31,33],[38,29,31,33,"default"],[38,36,31,33],[39,4,32,2],[39,13,32,2,"EventEmitter"],[39,26,32,2],[39,28,32,16],[40,6,32,16],[40,10,32,16,"_classCallCheck2"],[40,26,32,16],[40,27,32,16,"default"],[40,34,32,16],[40,42,32,16,"EventEmitter"],[40,54,32,16],[41,6,33,4],[41,10,33,8],[41,11,33,9,"_registry"],[41,20,33,18],[41,23,33,21],[41,24,33,22],[41,25,33,23],[42,4,34,2],[43,4,35,2],[44,0,36,0],[45,0,37,0],[46,0,38,0],[47,4,35,2],[47,15,35,2,"_createClass2"],[47,28,35,2],[47,29,35,2,"default"],[47,36,35,2],[47,38,35,2,"EventEmitter"],[47,50,35,2],[48,6,35,2,"key"],[48,9,35,2],[49,6,35,2,"value"],[49,11,35,2],[49,13,39,2],[49,22,39,2,"addListener"],[49,33,39,13,"addListener"],[49,34,39,14,"eventType"],[49,43,39,23],[49,45,39,25,"listener"],[49,53,39,33],[49,55,39,35,"context"],[49,62,39,42],[49,64,39,44],[50,8,40,4],[50,12,40,8,"registrations"],[50,25,40,21],[50,28,40,24,"allocate"],[50,36,40,32],[50,37,40,33],[50,41,40,37],[50,42,40,38,"_registry"],[50,51,40,47],[50,53,40,49,"eventType"],[50,62,40,58],[50,63,40,59],[51,8,41,4],[51,12,41,8,"registration"],[51,24,41,20],[51,27,41,23],[52,10,42,6,"context"],[52,17,42,13],[53,10,43,6,"listener"],[53,18,43,14],[54,10,44,6,"remove"],[54,16,44,12,"remove"],[54,17,44,12],[54,19,44,15],[55,12,45,8,"registrations"],[55,25,45,21],[55,26,45,22,"delete"],[55,32,45,28],[55,33,45,29,"registration"],[55,45,45,41],[55,46,45,42],[56,10,46,6],[57,8,47,4],[57,9,47,5],[58,8,48,4,"registrations"],[58,21,48,17],[58,22,48,18,"add"],[58,25,48,21],[58,26,48,22,"registration"],[58,38,48,34],[58,39,48,35],[59,8,49,4],[59,15,49,11,"registration"],[59,27,49,23],[60,6,50,2],[62,6,52,2],[63,0,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,0,57,0],[68,0,58,0],[69,4,52,2],[70,6,52,2,"key"],[70,9,52,2],[71,6,52,2,"value"],[71,11,52,2],[71,13,59,2],[71,22,59,2,"emit"],[71,26,59,6,"emit"],[71,27,59,7,"eventType"],[71,36,59,16],[71,38,59,18],[72,8,60,4],[72,12,60,8,"registrations"],[72,25,60,21],[72,28,60,24],[72,32,60,28],[72,33,60,29,"_registry"],[72,42,60,38],[72,43,60,39,"eventType"],[72,52,60,48],[72,53,60,49],[73,8,61,4],[73,12,61,8,"registrations"],[73,25,61,21],[73,29,61,25],[73,33,61,29],[73,35,61,31],[74,10,62,6],[74,15,62,11],[74,19,62,15,"_len"],[74,23,62,19],[74,26,62,22,"arguments"],[74,35,62,31],[74,36,62,32,"length"],[74,42,62,38],[74,44,62,40,"args"],[74,48,62,44],[74,51,62,47],[74,55,62,51,"Array"],[74,60,62,56],[74,61,62,57,"_len"],[74,65,62,61],[74,68,62,64],[74,69,62,65],[74,72,62,68,"_len"],[74,76,62,72],[74,79,62,75],[74,80,62,76],[74,83,62,79],[74,84,62,80],[74,85,62,81],[74,87,62,83,"_key"],[74,91,62,87],[74,94,62,90],[74,95,62,91],[74,97,62,93,"_key"],[74,101,62,97],[74,104,62,100,"_len"],[74,108,62,104],[74,110,62,106,"_key"],[74,114,62,110],[74,116,62,112],[74,118,62,114],[75,12,63,8,"args"],[75,16,63,12],[75,17,63,13,"_key"],[75,21,63,17],[75,24,63,20],[75,25,63,21],[75,26,63,22],[75,29,63,25,"arguments"],[75,38,63,34],[75,39,63,35,"_key"],[75,43,63,39],[75,44,63,40],[76,10,64,6],[77,10,65,6],[77,15,65,11],[77,19,65,15,"_i"],[77,21,65,17],[77,24,65,20],[77,25,65,21],[77,27,65,23,"_arr"],[77,31,65,27],[77,34,65,30],[77,35,65,31],[77,38,65,34,"registrations"],[77,51,65,47],[77,52,65,48],[77,54,65,50,"_i"],[77,56,65,52],[77,59,65,55,"_arr"],[77,63,65,59],[77,64,65,60,"length"],[77,70,65,66],[77,72,65,68,"_i"],[77,74,65,70],[77,76,65,72],[77,78,65,74],[78,12,66,8],[78,16,66,12,"registration"],[78,28,66,24],[78,31,66,27,"_arr"],[78,35,66,31],[78,36,66,32,"_i"],[78,38,66,34],[78,39,66,35],[79,12,67,8,"registration"],[79,24,67,20],[79,25,67,21,"listener"],[79,33,67,29],[79,34,67,30,"apply"],[79,39,67,35],[79,40,67,36,"registration"],[79,52,67,48],[79,53,67,49,"context"],[79,60,67,56],[79,62,67,58,"args"],[79,66,67,62],[79,67,67,63],[80,10,68,6],[81,8,69,4],[82,6,70,2],[84,6,72,2],[85,0,73,0],[86,0,74,0],[87,4,72,2],[88,6,72,2,"key"],[88,9,72,2],[89,6,72,2,"value"],[89,11,72,2],[89,13,75,2],[89,22,75,2,"removeAllListeners"],[89,40,75,20,"removeAllListeners"],[89,41,75,21,"eventType"],[89,50,75,30],[89,52,75,32],[90,8,76,4],[90,12,76,8,"eventType"],[90,21,76,17],[90,25,76,21],[90,29,76,25],[90,31,76,27],[91,10,77,6],[91,14,77,10],[91,15,77,11,"_registry"],[91,24,77,20],[91,27,77,23],[91,28,77,24],[91,29,77,25],[92,8,78,4],[92,9,78,5],[92,15,78,11],[93,10,79,6],[93,17,79,13],[93,21,79,17],[93,22,79,18,"_registry"],[93,31,79,27],[93,32,79,28,"eventType"],[93,41,79,37],[93,42,79,38],[94,8,80,4],[95,6,81,2],[97,6,83,2],[98,0,84,0],[99,0,85,0],[100,4,83,2],[101,6,83,2,"key"],[101,9,83,2],[102,6,83,2,"value"],[102,11,83,2],[102,13,86,2],[102,22,86,2,"listenerCount"],[102,35,86,15,"listenerCount"],[102,36,86,16,"eventType"],[102,45,86,25],[102,47,86,27],[103,8,87,4],[103,12,87,8,"registrations"],[103,25,87,21],[103,28,87,24],[103,32,87,28],[103,33,87,29,"_registry"],[103,42,87,38],[103,43,87,39,"eventType"],[103,52,87,48],[103,53,87,49],[104,8,88,4],[104,15,88,11,"registrations"],[104,28,88,24],[104,32,88,28],[104,36,88,32],[104,39,88,35],[104,40,88,36],[104,43,88,39,"registrations"],[104,56,88,52],[104,57,88,53,"size"],[104,61,88,57],[105,6,89,2],[106,4,89,3],[107,2,89,3],[108,2,91,0],[108,11,91,9,"allocate"],[108,19,91,17,"allocate"],[108,20,91,18,"registry"],[108,28,91,26],[108,30,91,28,"eventType"],[108,39,91,37],[108,41,91,39],[109,4,92,2],[109,8,92,6,"registrations"],[109,21,92,19],[109,24,92,22,"registry"],[109,32,92,30],[109,33,92,31,"eventType"],[109,42,92,40],[109,43,92,41],[110,4,93,2],[110,8,93,6,"registrations"],[110,21,93,19],[110,25,93,23],[110,29,93,27],[110,31,93,29],[111,6,94,4,"registrations"],[111,19,94,17],[111,22,94,20],[111,26,94,24,"Set"],[111,29,94,27],[111,30,94,28],[111,31,94,29],[112,6,95,4,"registry"],[112,14,95,12],[112,15,95,13,"eventType"],[112,24,95,22],[112,25,95,23],[112,28,95,26,"registrations"],[112,41,95,39],[113,4,96,2],[114,4,97,2],[114,11,97,9,"registrations"],[114,24,97,22],[115,2,98,0],[116,0,98,1]],"functionMap":{"names":["<global>","EventEmitter","constructor","addListener","registration.remove","emit","removeAllListeners","listenerCount","allocate"],"mappings":"AAA;eC8B;ECC;GDE;EEK;MCK;ODE;GFI;EIS;GJW;EKK;GLM;EMK;GNG;CDC;AQC"}},"type":"js/module"}]}